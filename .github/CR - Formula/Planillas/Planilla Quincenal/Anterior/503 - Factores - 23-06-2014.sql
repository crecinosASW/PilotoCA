/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

begin transaction

delete from sal.fat_factores_tipo_planilla 
WHERE EXISTS (SELECT 1 FROM sal.tpl_tipo_planilla WHERE tpl_codigo = fat_codtpl AND tpl_codigo_visual IN ('1'));
delete from sal.ftp_formulacion_tipos_planilla 
WHERE EXISTS (SELECT 1 FROM sal.tpl_tipo_planilla WHERE tpl_codigo = ftp_codtpl AND tpl_codigo_visual IN ('1'));

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = 'A0A72C19-098F-496E-8A98-DE5A963AD621';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('A0A72C19-098F-496E-8A98-DE5A963AD621','PrestacionPuesto','Prestaciones del Puesto Mensual','FUNCTION PrestacionPuesto()

PrestaPuesto = 0

if PrestacionesPuesto.RecordCount > 0 then
	PrestacionesPuesto.MoveFirst
	do until PrestacionesPuesto.EOF
		if (cint(Periodos.Fields("PPL_FRECUENCIA").Value) = PrestacionesPuesto.fields("pre_frecuencia").value) or (PrestacionesPuesto.fields("pre_frecuencia").value = 6) then

			agrega_ingresos_historial Agrupadores, _ 
						IngresosEstaPlanilla, _
						Empleados.Fields("EMP_CODIGO").Value, _
						Periodos.Fields("PPL_CODIGO").Value, _
						PrestacionesPuesto.Fields("pre_codingreso").Value , _
						round(PrestacionesPuesto.Fields("ppp_VALOR").Value, 2), _
						PrestacionesPuesto.Fields("ppp_codmon").Value, 0, "Dias"
   
			PrestaPuesto = PrestaPuesto + round(PrestacionesPuesto.Fields("ppp_VALOR").Value, 2)

		end if

		PrestacionesPuesto.MoveNext
	loop
end if

PrestacionPuesto= PrestaPuesto

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = '814219DD-1ED1-415F-BCAD-2ACFC7B3AB6B';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('814219DD-1ED1-415F-BCAD-2ACFC7B3AB6B','TotalIngresos','Suma de Todos los Ingresos Devengados por el Empleado en el periodo Mensual','FUNCTION TotalIngresos()

Dim bruto       
bruto = 0       

bruto = Round(Factores("Salario").Value + _        
              Factores("Extraordinario").Value + _          
              Factores("BonoLey").Value + _    
              Factores("BonoPactado").Value + _   
              Factores("ComplementoSalario").Value + _                
              Factores("ComplementoBonoPactado").Value + _                
              Factores("ComplementoBonoLey").Value + _     
              Factores("PrestacionIncapacidad").Value + _	 		  
              Factores("IngresoEventual").Value + _
              Factores("PrestacionEmpleado").Value + _
              Factores("PrestacionPuesto").Value + _
              Factores("Vacacion").Value + _
              Factores("BonoVacacional").Value + _
              Factores("RetroactivoSalario").Value + _
              Factores("RetroactivoBonoLey").Value + _
              Factores("Sustitucion").Value + _
              Factores("IngresosCiclicos").Value + _
              Factores("RetroactivoBonoPacatado").Value, 2) 

TotalIngresos= bruto

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = 'A5161DEB-42C0-4E0E-8175-84ACDC79C626';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('A5161DEB-42C0-4E0E-8175-84ACDC79C626','IngresoEventual','Pago de Ingresos Eventuales Mensual','FUNCTION IngresoEventual()

OtrosIng = 0
  
if IngresosEventuales.RecordCount > 0 then
	IngresosEventuales.MoveFirst
	
	do until IngresosEventuales.EOF
		vc = round(IngresosEventuales.Fields("oin_valor_a_pagar").Value, 2)
		agrega_ingresos_historial Agrupadores, _
									IngresosEstaPlanilla, _
									Empleados.Fields("EMP_CODIGO").Value, _
									Periodos.Fields("PPL_CODIGO").Value, _
									IngresosEventuales.Fields("OIN_CODTIG").Value, _
									vc, IngresosEventuales.Fields("oin_codmon").Value, 0, "Dias"
									
		OtrosIng = OtrosIng + vc
		
		IngresosEventuales.MoveNext
	loop
end if

IngresoEventual= OtrosIng

END FUNCTION','double','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = '40F94D1F-E492-45DA-B062-7357505C5ADA';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('40F94D1F-E492-45DA-B062-7357505C5ADA','BonoLeyMensual','Bono de Ley Mensual ajustado por si hubo incrementos o si el ingreso fue en el mes Mensual','FUNCTION BonoLeyMensual()

bonomensual = 0
bonoanterior = 0

DiasAnterior = 0
DiasActual = 0
   
'' --- BONIFICACION DE LEY ACTUAL
bonomensual = round(Factores("BonoLeyActual").Value,2)
   
'' --- AJUSTA INGRESO POR CONTRATACION DENTRO DEL PERIODO
if Empleados.Fields("EMP_FECHA_INGRESO").Value > Periodos.Fields("PPL_FECHA_INI").Value then
	bonomensual = round(bonomensual / 30 * (30 - Day(Empleados.Fields("EMP_FECHA_INGRESO").Value) + 1), 2)
	fini = Empleados.Fields("EMP_FECHA_INGRESO").Value
else
	fini = Periodos.Fields("PPL_FECHA_INI").Value
end if
      
'' --- CALCULA EL BONO DE LEY ANTERIOR CONSIDERANDO QUE HUBO INCREMENTOS
if not (RubrosBonoLey.Bof and RubrosBonoLey.Eof) then
if isnull( RubrosBonoLey.Fields("esa_valor_anterior").Value ) or RubrosBonoLey.Fields("esa_valor_anterior").Value = 0.00 then
	bonoanterior = bonomensual
else
	if isnull(RubrosBonoLey.Fields("esa_exp_valor").Value) then
		bonoanterior = RubrosBonoLey.Fields("esa_valor_anterior").Value 
	else
		if RubrosBonoLey.Fields("esa_exp_valor").Value = "Diario" then
			bonoanterior = RubrosBonoLey.Fields("esa_valor_anterior").Value * 30
		else
			bonoanterior = RubrosBonoLey.Fields("esa_valor_anterior").Value 
		end if
	end if
end if
   
'' --- CALCULA EL SALARIO CONSIDERANDO QUE HUBO INCREMENTOS
if not isnull( RubrosBonoLey.Fields("esa_valor_anterior").Value ) then
	if RubrosBonoLey.Fields("esa_fecha_vigencia").Value > fini and _
		RubrosBonoLey.Fields("esa_fecha_vigencia").Value <= Periodos.Fields("PPL_FECHA_FIN").Value then

		if (day(RubrosBonoLey.Fields("esa_fecha_vigencia").Value) > 30) OR (MONTH(RubrosBonoLey.Fields("esa_fecha_vigencia").Value) = 2 AND day(RubrosBonoLey.Fields("esa_fecha_vigencia").Value) >= 28) THEN			
			DiasAnterior = 30 - DAY(FINI)
		ELSE
			DIASANTERIOR = DATEDIFF("d", fini, RubrosBonoLey.Fields("esa_fecha_vigencia").Value) 
		end if

		DiasActual = 30 - DAY(RubrosBonoLey.Fields("esa_fecha_vigencia").Value) + 1

		bonomensual = round((bonoanterior / 30.00) * DiasAnterior, 2) + _
				round((bonomensual / 30.00)  * DiasActual, 2)   

	end if
end if   

end if

'' --- Valor de Retorno de la Función
BonoLeyMensual= bonomensual

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = '97DF903D-46A1-477D-921F-8E325484FF3C';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('97DF903D-46A1-477D-921F-8E325484FF3C','DiasNoTrabajados','Obtiene el Tiempo No Trabajado por el Empleado Mensual','FUNCTION DiasNoTrabajados()

dnt = 0  

If TiemposNoTrabajados.RecordCount > 0 Then         
	TiemposNoTrabajados.MoveFirst         
	
	Do Until TiemposNoTrabajados.EOF              

		dnt = dnt + cint(TiemposNoTrabajados.Fields("DIAS").Value)

		TiemposNoTrabajados.movenext       
	Loop         

End If             

DiasNoTrabajados= dnt  

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = '4669FA17-9457-4618-9E79-20B352A3DB8F';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('4669FA17-9457-4618-9E79-20B352A3DB8F','BonoLey','Valor del Bono de Ley correspondiente al Periodo Mensual','FUNCTION BonoLey()

Dim bon
Dim DiasDelMes
Dim Dias  

bon = 0  
DiasDelMes = 0
Dias = 0

if Periodos.Fields("PPL_FRECUENCIA").Value = 2 then

	DiasDelMes = Factores("DiasDelMes").Value 
			 
	if DiasDelMes > 0 then     
		bon = Factores("BonoLeyMensual").Value 
		
		dias =  Factores("DiasTrabajados").Value + _ 
		        Factores("DiasNoTrabajados").Value + _
		        Factores("DiasAmonestacion").Value + _ 
		        Factores("DiasIncapacidad").Value + _
		        Factores("DiasVacacion").Value		

		If bon > 0 Then       
			bon = bon / DiasDelMes * dias  
		End If 
		
	End If                   

	If Not IsNull(Factores("BonoLey").CodTipoIngreso) And bon > 0 Then    
		agrega_ingresos_historial Agrupadores, _
									IngresosEstaPlanilla, _
									Empleados.Fields("EMP_CODIGO").Value, _
									Periodos.Fields("PPL_CODIGO").Value, _
									Factores("BonoLey").CodTipoIngreso, _
									bon, RubrosBonoLey.Fields("esa_codmon").Value, dias, "Dias"
	end if

End If

BonoLey= bon 

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = 'BEFA07C4-F284-4DF6-8B76-57417CD8A65A';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('BEFA07C4-F284-4DF6-8B76-57417CD8A65A','Extraordinario','Determina el Monto devengado el empleado por Horas Extras Mensual','FUNCTION Extraordinario()

sum = 0.00
nh = 0

if Periodos.Fields("PPL_FRECUENCIA").Value = 2 Then 

   mon = "GTQ"

   if HorasExtras.Recordcount > 0 then
      
      HorasExtras.MoveFirst
	
      do until HorasExtras.EOF

         sum = sum + round(HorasExtras.Fields("EXT_VALOR").Value, 2)
         nh = nh + round(HorasExtras.Fields("EXT_NUMERO_HORA").Value, 2)

         HorasExtras.MoveNext
      loop
	
      If sum > 0 then
	   		agrega_ingresos_historial Agrupadores, _
									IngresosEstaPlanilla, _
									Empleados.Fields("EMP_CODIGO").Value, _
									Periodos.Fields("PPL_CODIGO").Value, _
									Factores("Extraordinario").CodTipoIngreso , _
									round(sum, 2), _
									mon, _
									round(nh, 2), "Horas"
      End if

   End if

End if

Extraordinario= sum

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = '26322A5C-2E2C-4E43-B245-9795A8EC2B24';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('26322A5C-2E2C-4E43-B245-9795A8EC2B24','SalarioActual','Determina la parte del Salario Nominal del Empleado Mensual','FUNCTION SalarioActual()

salq = 0.00

'' - CALCULA SALARIO ACTUAL
if not (RubrosSalario.Bof and RubrosSalario.Eof) then
if isnull( RubrosSalario.Fields("esa_valor").Value ) then
	salq = 0
else
	if isnull(RubrosSalario.Fields("esa_exp_valor").Value) then
		salq = RubrosSalario.Fields("esa_valor").Value
	else
		if RubrosSalario.Fields("esa_exp_valor").Value = "Hora" then
			salq = RubrosSalario.Fields("esa_valor_hora").Value * RubrosSalario.Fields("esa_num_horas_x_mes").Value
		else
			salq = RubrosSalario.Fields("esa_valor").Value
		end if
	end if
end if
end if
  
SalarioActual= salq

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = '61281C0E-9C67-440B-9C1B-DC0BAE7397BD';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('61281C0E-9C67-440B-9C1B-DC0BAE7397BD','DescuentoCiclico','Determina el Monto a Descontar al empleado por Prestamos Mensual','FUNCTION DescuentoCiclico()

Dim dc  
Dim vc  
Dim Liquido  
Dim Saldo  
Dim lfilter                   

Liquido = Factores("TotalIngresos").Value - _    
		   Factores("SeguroSocial").Value - _            
		   Factores("BoletoOrnato").Value - _            
      	   Factores("SeguroMedico").Value - _         
		   Factores("DescuentoEventual").Value - _
		   Factores("ISR").Value

dc = 0
vc = 0
aplicada = False


Do Until DescuentosCiclicos.EOF

	vc = Round(DescuentosCiclicos.Fields("cdc_valor_cobrado").Value, 2)

	If (liquido - vc) > 0 Then
		aplicada = True
		liquido = liquido - vc
		dc = dc + vc
		DescuentosCiclicos.Fields("cdc_fecha_descuento").Value = Periodos.Fields("PPL_FECHA_PAGO").Value
		DescuentosCiclicos.Fields("cdc_aplicado_planilla").Value = 1

		agrega_descuentos_historial Agrupadores, _
										DescuentosEstaPlanilla, _
										Empleados.Fields("EMP_CODIGO").Value, _
										Periodos.Fields("PPL_CODIGO").Value, _
										DescuentosCiclicos.Fields("dcc_codtdc").Value, _
										vc, 0, 0, DescuentosCiclicos.Fields("dcc_codmon").Value, 0, "Dias"
	Else
		aplicada = False
	    DescuentosCiclicos.Fields("cdc_aplicado_planilla").Value = 0    
	End If
    
	DescuentosCiclicos.MoveNext
Loop

DescuentoCiclico= dc

END FUNCTION
','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = '138584C5-182B-407A-834E-1CACD3726900';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('138584C5-182B-407A-834E-1CACD3726900','FiltroEmpleados','Determina que empleado participa en la planilla','FUNCTION FiltroEmpleados()

	FiltroEmpleados = (Empleados.Fields("EMP_FECHA_INGRESO").Value <= Periodos.Fields("PPL_FECHA_FIN").Value) and Empleados.Fields("EMP_CODTPL").Value = Periodos.Fields("ppl_codtpl").Value

	if FiltroEmpleados then
		writelog chr(10)
		writelog Empleados.Fields("emp_codigo").Value
	end if
	
''	writelog " "

FiltroEmpleados= FiltroEmpleados

end function ','boolean','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = 'D258CE6A-AFAB-4F7D-A199-D747A894F218';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('D258CE6A-AFAB-4F7D-A199-D747A894F218','BonoVacacional','Monto de Bono por vacaciones gozadas Mensual','FUNCTION BonoVacacional()

MontoBono = 0.00
DiasBono = 0
Valor_total = 0.00
dias_total = 0

CODMON = "GTQ"

if Vacaciones.RecordCount > 0 then
	Vacaciones.MoveFirst
end if

If Not (Vacaciones.bof And Vacaciones.EOF) Then 

Do While Not Vacaciones.EOF   

DiasBono = cdbl(Vacaciones.Fields("vca_dias_gozados").Value)
MontoBono = cdbl(Vacaciones.Fields("vca_valor_bono").Value)

dias_total = dias_total + DiasBono
valor_total = valor_total + MontoBono

Vacaciones.movenext

Loop
writelog " Vacaciones: " & cstr(Valor_total)
END IF

If Not IsNull(Factores("BonoVacacional").CodTipoIngreso) And Valor_total > 0 Then
      agrega_ingresos_historial Agrupadores, _
                                IngresosEstaPlanilla, _
                                Empleados.Fields("EMP_CODIGO").Value, _
                                Periodos.Fields("PPL_CODIGO").Value, _
                                Factores("BonoVacacional").CodTipoIngreso, _
                                Valor_Total, CODMON, dias_total, "Dias"

End If

BonoVacacional= Valor_Total

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = '38BF0B7A-152F-4798-BD8A-099939CB84B8';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('38BF0B7A-152F-4798-BD8A-099939CB84B8','RetroactivoSalario','Determina el valor del Retroactivo de Incremento sobre Salario Otorgado al Empleado Mensual','FUNCTION RetroactivoSalario()

Retroactivo = 0.00
dias = 0


               
	If Not (RetroactivosSalario.bof And RetroactivosSalario.EOF) Then

		Do While Not RetroactivosSalario.EOF
                                             
			dias = RetroactivosSalario.Fields("PIR_DIAS_RETROACTIVO").Value 
            
			Retroactivo = Retroactivo + RetroactivosSalario.Fields("PIR_MONTO_RETROACTIVO").Value 

			RetroactivosSalario.movenext
		Loop
	End If
       
     
	If Not IsNull(Factores("RetroactivoSalario").CodTipoIngreso) And Retroactivo > 0 Then
		agrega_ingresos_historial Agrupadores, _
									IngresosEstaPlanilla, _
									Empleados.Fields("EMP_CODIGO").Value, _
									Periodos.Fields("PPL_CODIGO").Value, _
									Factores("RetroactivoSalario").CodTipoIngreso, _
									Retroactivo, RubrosSalario.Fields("esa_codmon").Value, dias, "Dias"
	End If

           

RetroactivoSalario= Retroactivo

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = 'AC7628BE-24E0-499A-80B2-51FB9685D141';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('AC7628BE-24E0-499A-80B2-51FB9685D141','ComplementoBonoLey','Complemento de Bonificacion de Ley a Empleados nuevos en el periodo Anterior y sin pago efectuado Mensual','FUNCTION ComplementoBonoLey()

''----------------------------------------------------------------------------------------------------------
'' Calcula los complementos de empleados que ingresaron en el periodo anterior siempre y cuando el anterior
'' sea el segundo periodo y que no haya tenido pago en ese periodo.
'' Los dias que se toman son de la fecha de ingreso hasta el dia 30 del mes, dado que el salario es en base
'' a 30 dias.
''----------------------------------------------------------------------------------------------------------
vTotal = 0
vbonq = 0
vdias = 0
codmon = "GTQ"

if Periodos.Fields("PPL_FRECUENCIA").Value = 2 Then 

   if not (RubrosBonoLey.Bof and RubrosBonoLey.Eof) then
      codmon = RubrosBonoLey.Fields("esa_codmon").Value
   end if


   if NOT(ComplementosSalario.BOF and ComplementosSalario.EOF) then

      vdias = ComplementosSalario.Fields("eni_dias_pago").Value 
      vbonq = round(Factores("BonoLeyMensual").Value,2)

      vTotal = round((vbonq / 30.00) * vdias, 2)

   end if


   If Not IsNull(Factores("ComplementoBonoLey").CodTipoIngreso) And vtotal > 0 Then    
	   agrega_ingresos_historial Agrupadores, _
								IngresosEstaPlanilla, _
								Empleados.Fields("EMP_CODIGO").Value, _
								Periodos.Fields("PPL_CODIGO").Value, _
								Factores("ComplementoBonoLey").CodTipoIngreso, _
								vtotal, codmon, vdias, "Dias"
     
   end if

end if

ComplementoBonoLey= vTotal

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = 'AEF1DE9A-77AC-4B4A-B977-5EB3195C01CF';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('AEF1DE9A-77AC-4B4A-B977-5EB3195C01CF','DiasTrabajados','Determina la Cantidad de Dias Efectivamente trabajados por el empleado en el periodo Mensual','FUNCTION DiasTrabajados()

Dias = 0  
DiasIniciales = 0    
DiasLimite = 0

Fecha_Ingreso = Empleados.Fields("EMP_FECHA_INGRESO").Value

Fecha_Ini = Periodos.Fields("ppl_fecha_ini").Value 
Fecha_Fin = Periodos.Fields("ppl_fecha_fin").Value 

if Periodos.Fields("PPL_FRECUENCIA").Value = 1 Then
DiasLimite = 15
Else 
DiasLimite = 30
End if

If Empleados.Fields("plz_indefinida").Value = 1 Then 

	If Fecha_Ingreso >= Fecha_Ini And Fecha_Ingreso <= Fecha_Fin Then  
		diasiniciales = diasLimite - Day(Fecha_Ingreso) + 1
	ElseIf Fecha_Ingreso > Fecha_Fin Then                   
		diasiniciales = 0               
	Else            
		diasiniciales = DiasLimite
	End If  

Else       
	If Fecha_Ingreso >= Fecha_Ini And Fecha_Ingreso <= Fecha_fin Then
		If Fecha_Ingreso > Empleados.Fields("plz_fecha_fin").Value Then                   
			diasiniciales = 0              
		ElseIf Empleados.Fields("plz_fecha_fin").Value > Fecha_Fin Then
			diasiniciales = diasLimite - day(Fecha_Ingreso) + 1    
		Else                   
			diasiniciales = DateDiff("d", Fecha_Ingreso, Empleados.Fields("plz_fecha_fin").Value) + 1 
		End If         
	ElseIf Fecha_Ingreso > Fecha_Fin Then                   
		diasiniciales = 0               
	Else              
		If Empleados.Fields("plz_fecha_fin").Value > Fecha_Fin Then                   
			diasiniciales = DiasLimite
		Else                   
			diasiniciales = DateDiff("d", Fecha_ini, Empleados.Fields("plz_fecha_fin").Value) + 1
		End If       
	End If  
End If          


dias = diasiniciales - _
	Factores("DiasNoTrabajados").Value - _
	Factores("DiasAmonestacion").Value - _
	Factores("DiasIncapacidad").Value - _
	Factores("DiasVacacion").Value


If dias < 0 Then       
	dias = 0  
Else       
	If dias > DiasLimite Then            
		dias = DiasLimite  
	End If  
End If          

DiasTrabajados= dias  

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = 'E4DF7856-77BE-49B8-BD75-65E5E13BD14C';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('E4DF7856-77BE-49B8-BD75-65E5E13BD14C','Vacacion','Determina el monto a pagar al empleado por los días que está de vacaciones durante la planilla Mensual','FUNCTION Vacacion()

MontoVac = 0.00
DiasVac = 0
Valor_total = 0.00
dias_total = 0

CODMON = "GTQ"

if Vacaciones.RecordCount > 0 then
	Vacaciones.MoveFirst
end if

If Not (Vacaciones.bof And Vacaciones.EOF) Then 

Do While Not Vacaciones.EOF   

DiasVac = cdbl(Vacaciones.Fields("vca_dias_calendario").Value)
MontoVac = cdbl(Vacaciones.Fields("vca_valor_vacaciones").Value)

dias_total = dias_total + DiasVac
valor_total = valor_total + MontoVac

Vacaciones.movenext

Loop
writelog " Vacaciones: " & cstr(Valor_total)
END IF

If Not IsNull(Factores("Vacacion").CodTipoIngreso) And Valor_total > 0 Then
      agrega_ingresos_historial Agrupadores, _
                                IngresosEstaPlanilla, _
                                Empleados.Fields("EMP_CODIGO").Value, _
                                Periodos.Fields("PPL_CODIGO").Value, _
                                Factores("Vacacion").CodTipoIngreso, _
                                Valor_Total, CODMON, dias_total, "Dias"

End If

Vacacion= Valor_Total

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = 'CB917C21-2EC7-47F6-BEC6-5E67B242087A';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('CB917C21-2EC7-47F6-BEC6-5E67B242087A','BoletoOrnato','Determina el Monto a Descontar al empleado por concepto de Boleto de Ornato Mensual','FUNCTION BoletoOrnato()

Dim Bolor  
Dim MontoSalario  
Dim Liquido       

Bolor = 0.00
MontoSalario = 0.00    
salarios = 0.00
bonificacion = 0.00    

if Periodos.Fields("PPL_FRECUENCIA").Value = 2 And _
   Periodos.Fields("PPL_MES").Value = ParametrosAplicacion.Fields("pge_mes_descontar_boleto").Value And _
   Empleados.Fields("dpl_descuenta_ornato").Value = "S" Then 
   
   If not (RubrosSalario.Bof and RubrosSalario.Eof) then
      if isnull( RubrosSalario.Fields("esa_valor").Value ) then
         salarios = 0.00
      else       
	       salarios = RubrosSalario.Fields("esa_valor").Value
      end if
   end if

   if not (RubrosBonoLey.Bof and RubrosBonoLey.Eof) then
      if isnull( RubrosBonoLey.Fields("esa_valor").Value ) then
         bonificacion = 0.00
      else       
         bonificacion = RubrosBonoLey.Fields("esa_valor").Value 
      end if
   end if

   Liquido = Factores("TotalIngresos").Value 

   Montosalario = salarios + Bonificacion

   If Not (BoletoOrnato.bof And BoletoOrnato.EOF) Then
      BoletoOrnato.MoveFirst                 
      
      Do While Not BoletoOrnato.EOF
         If MontoSalario >= CCur(BoletoOrnato.Fields("bor_monto_inicial").Value) And _
            MontoSalario <= CCur(BoletoOrnato.Fields("bor_monto_final").Value) Then
            Bolor = Round(BoletoOrnato.Fields("bor_monto_descuento").Value, 2)
			 Exit Do
         End If
         BoletoOrnato.movenext
      Loop
   Else
        writelog "No Existe Tabla para el Calculo del Boleto de Ornato Definida para esta Empresa"
        Exit Function
   End If

   If (Liquido - Bolor) < 0 Then
      Bolor = 0
   End If       

   If Not IsNull(Factores("BoletoOrnato").CodTipoDescuento) And Bolor > 0 Then
	   agrega_descuentos_historial Agrupadores, _
								DescuentosEstaPlanilla, _
								Empleados.Fields("EMP_CODIGO").Value, _
								Periodos.Fields("PPL_CODIGO").Value, _
								Factores("BoletoOrnato").CodTipoDescuento, _
								ROUND(bolor, 2), 0, 0, Periodos.Fields("tpl_codmon").Value, 0, "Dias"
   End If

End if

BoletoOrnato= Round(Bolor, 2)

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = '5938B934-34DA-4A2C-BD98-88C56B09FA8C';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('5938B934-34DA-4A2C-BD98-88C56B09FA8C','IngresosCiclicos','Pagos Fijos realizados al empleado mensualmente Mensual','FUNCTION IngresosCiclicos()
	
	Dim ValorIngreso
	Dim Dias
	
	ValorIngreso = 0.00
	Dias = 0
	
	Dias = Factores("DiasTrabajados").Value

	''''Debemos garantizarnos que el cursor tiene por lo menos un registro para este empleado
	If Not (IngresosCiclicos.Bof And IngresosCiclicos.Eof)Then
		IngresosCiclicos.MoveFirst
		
		Do Until IngresosCiclicos.EOF
			
			ValorIngreso = ValorIngreso + IngresosCiclicos.Fields("cic_valor_cuota").Value
			
			If ValorIngreso > 0 Then
				agrega_ingresos_historial Agrupadores, _
											IngresosEstaPlanilla, _
											Empleados.Fields("EMP_CODIGO").Value, _
											Periodos.Fields("PPL_CODIGO").Value, _
											IngresosCiclicos.Fields("igc_codtig").Value, _
											round(IngresosCiclicos.Fields("cic_valor_cuota").Value, 0), _
											IngresosCiclicos.Fields("igc_codmon").Value, Dias, "Dias"
			End If

			IngresosCiclicos.MoveNext
		Loop

	End If
	
	IngresosCiclicos= Round(ValorIngreso, 0)
	
END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = '0B0F5BE5-83ED-4CF4-9D77-B95E85466295';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('0B0F5BE5-83ED-4CF4-9D77-B95E85466295','BonoPactadoActual','Calcula el valor de la Bonificacion Pactada Actual Mensual','FUNCTION BonoPactadoActual()

boni = 0.00
   
'' - CALCULA LA BONIFICACION ACTUAL
if not (RubrosBonoPactado.Bof and RubrosBonoPactado.Eof) then
if isnull( RubrosBonoPactado.Fields("esa_valor").Value ) then
	boni = 0.00
else
	boni = RubrosBonoPactado.Fields("esa_valor").Value
end if
end if
   
BonoPactadoActual= boni

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = 'C032648D-F89E-4361-9722-AC9748783521';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('C032648D-F89E-4361-9722-AC9748783521','SeguroSocial','Determina el Monto a Descontar por concepto de IGSS al empleado en el periodo Mensual','FUNCTION SeguroSocial()

afecto = 0.00
cuota = 0.00
patronal = 0.00
por_cuota = 0.0000
pat_cuota = 0.0000

If Periodos.Fields("PPL_FRECUENCIA").Value = 2 then
   If Empleados.Fields("dpl_seguro_social").Value Then
      If not (ParametrosIGSS.bof and ParametrosIGSS.eof) then
         If IsNull(ParametrosIGSS.Fields("ubi_porcentaje_cuota_isss").Value) Then
            por_cuota = 0
         Else
			 por_cuota = ParametrosIGSS.Fields("ubi_porcentaje_cuota_isss").Value
		  End If
	  End if
  
      afecto = Agrupadores("BaseCalculoIGSS").Value

      '' Cuota Empleado
      
      cuota = por_cuota / 100.00 * afecto
	
      If cuota < 0 Then 
         cuota = 0       
      End if

      '' Cuota Patronal
      
      pat_cuota = Factores("SeguroSocialPatrono").Value                                     
    
      patronal = Round(pat_cuota / 100.00 * afecto,2)

      If patronal < 0 Then  
         patronal = 0  
      End If                                   

      '' Inserta el registro en la tabla de descuentos  
      If Not IsNull(Factores("SeguroSocial").CodTipoDescuento) And cuota > 0 Then       
         agrega_descuentos_historial Agrupadores, _
									DescuentosEstaPlanilla, _
									Empleados.Fields("EMP_CODIGO").Value, _
									Periodos.Fields("PPL_CODIGO").Value, _
									Factores("SeguroSocial").CodTipoDescuento, _
									ROUND(cuota, 2), ROUND(patronal,2), Afecto, Periodos.Fields("tpl_codmon").Value, _
									Factores("DiasTrabajados").Value, "Dias"
      End If
   End if


   Factores("SeguroSocialPatrono").Value = patronal  
   
End if

SeguroSocial= Round(cuota, 2)

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = 'FE1BE314-0831-43A0-B557-2D003F980C35';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('FE1BE314-0831-43A0-B557-2D003F980C35','SeguroSocialPatrono','Determina el Monto que deberá pagar el Patrono por Concepto de IGSS del Empleado en el periodo Mensual','FUNCTION SeguroSocialPatrono()

socialpa = 0  
irtra = 0  
intecap = 0     

If Periodos.Fields("PPL_FRECUENCIA").Value = 2 then
   If Not (ParametrosIGSS.bof And ParametrosIGSS.EOF) Then       
	  If IsNull(ParametrosIGSS.Fields("ubi_pag_porcent_igss_patrono").Value) Then           
	 	  socialpa = 0       
	  Else            
		  socialpa = ParametrosIGSS.Fields("ubi_pag_porcent_igss_patrono").Value       
	  End If         

      If IsNull(ParametrosIGSS.Fields("ubi_irtra").Value) Then            
		  irtra = 0       
      Else            
		   irtra = ParametrosIGSS.Fields("ubi_irtra").Value       
      End If        

      If IsNull(ParametrosIGSS.Fields("ubi_intecap").Value) Then            
         intecap = 0       
      Else            
         intecap = ParametrosIGSS.Fields("ubi_intecap").Value       
      End If  
   End If            
End If

SeguroSocialPatrono= Round(socialpa, 2)

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = '4D268117-9C6B-46BC-9146-60CCFD686DE3';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('4D268117-9C6B-46BC-9146-60CCFD686DE3','SeguroMedico','Determina el monto de Descuento por el Seguro Medico. Mensual','FUNCTION SeguroMedico()

Seguro = 0.00
CuotaPat = 0.00
CuotaLab = 0.00

if Periodos.Fields("PPL_FRECUENCIA").Value = 2 then

	if not (SegurosMedicos.Bof and SegurosMedicos.eof) then
		CuotaPat = SegurosMedicos.Fields("sem_cuota_pat").Value 
		CuotaLab = SegurosMedicos.Fields("sem_cuota_emp").Value 
	end if
	

	If Not IsNull(Factores("SeguroMedico").CodTipoDescuento) And CuotaLab > 0 Then       

		Seguro = CuotaLab
	
		agrega_descuentos_historial Agrupadores, _
									DescuentosEstaPlanilla, _
									Empleados.Fields("EMP_CODIGO").Value, _
									Periodos.Fields("PPL_CODIGO").Value, _
									Factores("SeguroMedico").CodTipoDescuento, _
									ROUND(CuotaLab, 2), CuotaPat, 0, Periodos.Fields("tpl_codmon").Value, 0, "Dias"
	end if 

end if

SeguroMedico= Seguro

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = 'D2091928-4505-43C4-ACA4-022CCFE1E5FB';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('D2091928-4505-43C4-ACA4-022CCFE1E5FB','DiasVacacion','Determina la cantidad de Dias a pagar al empleado por encontrarse de vacaciones Mensual','FUNCTION DiasVacacion()

Dvac = 0

if not (DiasVacaciones.bof and DiasVacaciones.eof) then
	do while not DiasVacaciones.eof
	
		dvac = dvac + DiasVacaciones.Fields("dias_vacaciones").Value 
		DiasVacaciones.movenext
	
	loop

end if

DiasVacacion= Dvac

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = '1FD70B43-6D35-4AC5-8ADB-4AFC7766C425';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('1FD70B43-6D35-4AC5-8ADB-4AFC7766C425','ComplementoBonoPactado','Complemento de Bonificacion pactada a Empleados nuevos en el periodo Anterior y sin pago efectuado Mensual','FUNCTION ComplementoBonoPactado()

''----------------------------------------------------------------------------------------------------------
'' Calcula los complementos de empleados que ingresaron en el periodo anterior siempre y cuando el anterior
'' sea el segundo periodo y que no haya tenido pago en ese periodo.
'' Los dias que se toman son de la fecha de ingreso hasta el dia 30 del mes, dado que el salario es en base
'' a 30 dias.
''----------------------------------------------------------------------------------------------------------

vTotal = 0.00
vbonq = 0.00
vdias = 0
codmon = "GTQ"

if Periodos.Fields("PPL_FRECUENCIA").Value = 2 Then 

   if not (RubrosBonoPactado.Bof and RubrosBonoPactado.Eof) then
   
	  codmon = RubrosBonoPactado.Fields("esa_codmon").Value
   
   end if

   if NOT(ComplementosSalario.BOF and ComplementosSalario.EOF) then

      vdias = ComplementosSalario.Fields("eni_dias_pago").Value 
      vbonq = round(Factores("BonoPactadoMensual").Value,2)

      vTotal = round((vbonq / 30.00) * vdias, 2)

   end if


   If Not IsNull(Factores("ComplementoBonoPactado").CodTipoIngreso) And vtotal > 0 Then    
	      agrega_ingresos_historial Agrupadores, _
								IngresosEstaPlanilla, _
								Empleados.Fields("EMP_CODIGO").Value, _
								Periodos.Fields("PPL_CODIGO").Value, _
								Factores("ComplementoBonoPactado").CodTipoIngreso, _
								vtotal, codmon, vdias, "Dias"
     
   end if

end if

ComplementoBonoPactado= vTotal

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = 'FAE2287C-FF22-4466-927E-AAE805E36ECA';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('FAE2287C-FF22-4466-927E-AAE805E36ECA','PrestacionEmpleado','Prestaciones del Empleado Mensual','FUNCTION PrestacionEmpleado()

PrestaEmpleado = 0

if PrestacionesEmpleado.RecordCount > 0 then
	PrestacionesEmpleado.MoveFirst
	do until PrestacionesEmpleado.EOF

		if (cint(Periodos.Fields("PPL_FRECUENCIA").Value) = PrestacionesEmpleado.fields("pre_frecuencia").value) or (PrestacionesEmpleado.fields("pre_frecuencia").value = 6) then

			agrega_ingresos_historial Agrupadores, _ 
						IngresosEstaPlanilla, _
						Empleados.Fields("EMP_CODIGO").Value, _
						Periodos.Fields("PPL_CODIGO").Value, _
						PrestacionesEmpleado.Fields("pre_codingreso").Value , _
						round(PrestacionesEmpleado.Fields("ppe_VALOR").Value, 2), _
						PrestacionesEmpleado.Fields("ppp_codmon").Value, 0, "Dias"

			PrestaEmpleado = PrestaEmpleado + round(PrestacionesEmpleado.Fields("ppe_VALOR").Value, 2)
		end if

		PrestacionesEmpleado.MoveNext
	loop
end if

PrestacionEmpleado= PrestaEmpleado

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = 'EE32616B-288B-4D37-A1BC-9F3BB4A28C33';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('EE32616B-288B-4D37-A1BC-9F3BB4A28C33','Salario','Salario Correspondiente a esta quincena Mensual','FUNCTION Salario()

Dim sal
Dim DiasDelMes
Dim Dias  

sal = 0  
DiasDelMes = 0
Dias = 0

if Periodos.Fields("PPL_FRECUENCIA").Value = 2 then

	DiasDelMes = Factores("DiasDelMes").Value 

	if DiasDelMes > 0 then     
		sal = Factores("SueldoMensual").Value 
		dias = Factores("DiasTrabajados").Value                         

		If sal > 0 Then       
			sal = sal / DiasDelMes * dias  
		End If 
		
	End If                   


	If Not IsNull(Factores("Salario").CodTipoIngreso) And sal > 0 Then    
		agrega_ingresos_historial Agrupadores, _
									IngresosEstaPlanilla, _
									Empleados.Fields("EMP_CODIGO").Value, _
									Periodos.Fields("PPL_CODIGO").Value, _
									Factores("Salario").CodTipoIngreso, _
									sal, RubrosSalario.Fields("esa_codmon").Value, dias, "Dias"
	end if

End If

Salario= sal

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = '4D6352C0-4CDF-4D5C-8035-7BE6B279F6B3';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('4D6352C0-4CDF-4D5C-8035-7BE6B279F6B3','ISR','Determina el Monto a Descontar al Empleado por concepto de ISR Mensual','FUNCTION ISR()
Renta_Bruta = 0.00
Ingresos_Excentos = 0.00
Renta_Neta = 0.00
Deducibles = 0.00
Renta_Imponible = 0.00
Impuesto_Anual = 0.00
Periodos_Proyectar = 0.00
Retenido = 0.00
Renta_Mensual = 0.00


If Not (ISRCalculado.bof And ISRCalculado.EOF) Then  

Liquido = Factores("TotalIngresos").Value - _
	      Factores("SeguroSocial").Value - _
	      Factores("BoletoOrnato").Value 

If ParametrosAplicacion.Fields("pge_quincena_descontar_isr").Value = Periodos.Fields("PPL_FRECUENCIA").Value then

	If Not (ISRCalculado.bof And ISRCalculado.EOF) AND Empleados.Fields("dpl_renta").Value Then
	
       Renta_Bruta = CCur(ISRCalculado.Fields("ICI_RENTA_BRUTA").Value)

		Ingresos_Excentos = CCur(ISRCalculado.Fields("ICI_INGRESOS_EXCENTOS").Value)

		Periodos_Proyectar = CCur(ISRCalculado.Fields("ICI_PERIODOS_PROYECTAR").Value)
		
		Deducibles = CCur(ISRCalculado.Fields("ICI_DEDUCIBLES").Value) 
					
		Retenido = CCur(ISRCalculado.Fields("ICI_ISR_RETENIDO").Value )
			
		Renta_Bruta = Renta_Bruta + _
			          Agrupadores("GT_ISR13Ordinario").Value + _
			          Agrupadores("GT_ISR13BoniLey").Value + _
			          Agrupadores("GT_ISR13BoniPactada").Value + _
			          Agrupadores("GT_ISR13OtrosProyNI").Value  + _
			          Agrupadores("GT_ISR13OtrosProySI").Value  + _
			          Agrupadores("GT_ISR13OtrosNoProy").Value
			 
		Renta_Neta = Renta_Bruta - Ingresos_Excentos
					
		Renta_Imponible = Renta_Neta - Deducibles - Agrupadores("GT_ISR13SSDesc").Value
		
		Fecha_Ingreso = Empleados.Fields("EMP_FECHA_INGRESO").Value

		if Fecha_Ingreso > ISRCalculado.Fields("iaf_fecha_ini").Value and Fecha_Ingreso < ISRCalculado.Fields("iaf_fecha_fin").Value then
		   Renta_Imponible = ( Renta_Imponible / DateDiff("d", Fecha_Ingreso,ISRCalculado.Fields("iaf_fecha_fin").Value) + 1 ) * 365
		End if

	    if not (TablaISR.bof and TablaISR.eof) then
		   TablaISR.movefirst
		   
		   do until TablaISR.eof
			   if Renta_Imponible >= TablaISR.Fields("ISR_DESDE").Value and Renta_Imponible <= TablaISR.Fields("ISR_HASTA").Value Then

				   Impuesto_Anual = ((Renta_Imponible - TablaISR.Fields("ISR_EXCEDENTE").Value) * TablaISR.Fields("ISR_PCT").Value / 100.00) + TablaISR.Fields("ISR_VALOR").Value 

				   exit do
			   end if

			   TablaISR.movenext
		   loop
	    end if

		if Fecha_Ingreso > ISRCalculado.Fields("iaf_fecha_ini").Value and Fecha_Ingreso < ISRCalculado.Fields("iaf_fecha_fin").Value then
		   Impuesto_Anual = (Impuesto_Anual / 365 ) * (DateDiff("d", Fecha_Ingreso,ISRCalculado.Fields("iaf_fecha_fin").Value) + 1 ) 
		End if

   Impuesto_Anual = ROUND(Impuesto_Anual,2)
   
	Renta_Mensual = Impuesto_Anual - Retenido

	if Periodos_Proyectar > 0 Then
		Renta_Mensual = Renta_Mensual / (Periodos_Proyectar + 1)
	end if		
		
		If Renta_Mensual > 0 Then
			If (Liquido - Renta_Mensual) <= 0 Then
				Renta_Mensual = 0
			End If
	    End If
	Else
	Renta_Mensual = 0
	End If
    ''writelog vbCrlf
	''writelog "	Descuenta ISR al empleado " & Empleados.Fields("EMP_CODIGO").Value
	''writelog " Renta Bruta " & Renta_Bruta
	''writelog " Ingresos excentos " & Ingresos_Excentos
	''writelog " Renta_Imponible " & Renta_Imponible
	''writelog " Impuesto Anual " & Impuesto_Anual
	''writelog " Retenido " &  Retenido
	''writelog " Monto a Descontar " & Renta_Mensual
ELSE

  Renta_mensual = ISRCalculado.Fields("ICI_RETENCION_MENSUAL").Value

END IF

	Renta_Mensual = ROUND(Renta_Mensual,2)

	
	If Not IsNull(Factores("ISR").CodTipoDescuento) And Renta_Mensual > 0 Then
		''writelog "Descuenta ISR al empleado " & Empleados.Fields("EMP_CODIGO").Value
		''writelog "Monto a Descontar " & Emp_DescuentoISR.Fields("DJP_RETENCION_MENSUAL").Value
	
		agrega_descuentos_historial Agrupadores, _
									DescuentosEstaPlanilla, _
									Empleados.Fields("EMP_CODIGO").Value, _
									Periodos.Fields("PPL_CODIGO").Value, _
									Factores("ISR").CodTipoDescuento, _
									Round(Renta_Mensual, 2), 0, 0, Periodos.Fields("tpl_codmon").Value, 0, "Dias"
	End If

End If

If Renta_Mensual > 0 Then
	ISR= Round(Renta_Mensual, 2)
Else
	ISR= 0
End If

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = '3BD0298B-4CD9-47FB-A492-E1A626A61E28';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('3BD0298B-4CD9-47FB-A492-E1A626A61E28','DescuentoCiclicoPorcentaje','Determina el Monto a Descontar al empleado por Prestamos Mensual','FUNCTION DescuentoCiclicoPorcentaje()

Liquido = 0.00

Liquido = round(Factores("TotalIngresos").Value - _
	            Factores("SeguroSocial").Value - _
	            Factores("BoletoOrnato").Value - _
	            Factores("SeguroMedico").Value - _
	            Factores("DescuentoEventual").Value - _ 
	            Factores("DescuentoCiclico").Value, 2) - _
                Factores("ISR").Value
  
dc = 0
vc = 0
patrono = 0
aplicada = False

Do Until DescuentosCiclicosPorcentaje.EOF

	if DescuentosCiclicosPorcentaje.Fields("PRE_porcentaje").Value > 0 then

		for i = 1 to Agrupadores.Count
			if Agrupadores(i).Codigo = DescuentosCiclicosPorcentaje.Fields("PRE_CODTAG").Value then

				vc = round(Agrupadores(i).Value * DescuentosCiclicosPorcentaje.Fields("PRE_PORCENTAJE").Value / 100.00, 2)

				exit for
			end if
		next

		If (ccur(liquido) - ccur(vc)) >= 0 Then
			liquido = ccur(liquido) - ccur(vc)
			dc = dc + vc

			agrega_descuentos_historial Agrupadores, _
											DescuentosEstaPlanilla, _
											Empleados.Fields("EMP_CODIGO").Value, _
											Periodos.Fields("PPL_CODIGO").Value, _
					 						DescuentosCiclicosPorcentaje.Fields("TPR_CODTDC").Value , _
											vc, 0.00, 0.00, DescuentosCiclicosPorcentaje.Fields("DCC_CODMON").Value, 0, "Dias"
		End If

	end if
   
	DescuentosCiclicosPorcentaje.MoveNext
Loop

DescuentoCiclicoPorcentaje= dc

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = '988B4F9E-C51E-4BB1-94F8-FCE413C8B582';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('988B4F9E-C51E-4BB1-94F8-FCE413C8B582','RetroactivoBonoLey','Determina el monto a pagar al empleado por Retroactivo por Incremento de Bono Ley Mensual','FUNCTION RetroactivoBonoLey()

Retroactivo = 0.00
dias = 0


               
	If Not (RetroactivosBonoLey.bof And RetroactivosBonoLey.EOF) Then
                    
		Do While Not RetroactivosBonoLey.EOF
                                             
			dias = RetroactivosBonoLey.Fields("PIR_DIAS_RETROACTIVO").Value
            
			Retroactivo = Retroactivo + RetroactivosBonoLey.Fields("PIR_MONTO_RETROACTIVO").Value

			RetroactivosBonoLey.movenext
		Loop
	End If
       
     
	If Not IsNull(Factores("RetroactivoBonoLey").CodTipoIngreso) And Retroactivo > 0 Then
		agrega_ingresos_historial Agrupadores, _
								IngresosEstaPlanilla, _
								Empleados.Fields("EMP_CODIGO").Value, _
								Periodos.Fields("PPL_CODIGO").Value, _
								Factores("RetroactivoBonoLey").CodTipoIngreso, _
								Retroactivo, RubrosBonoLey.Fields("esa_codmon").Value, dias, "Dias"
	End If
      

             
RetroactivoBonoLey= Retroactivo

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = '6682FB47-7243-45E7-9C35-23F4F5CCFF53';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('6682FB47-7243-45E7-9C35-23F4F5CCFF53','DiasAmonestacion','Dias Amonestacion para este periodo Mensual','FUNCTION DiasAmonestacion()

Amo = 0         

If Amonestaciones.RecordCount > 0 Then              
	Amonestaciones.MoveFirst         

	Do Until Amonestaciones.EOF            

		Amo = Amo + Amonestaciones.Fields("DIAS").Value 
      
		Amonestaciones.movenext       
	Loop  

End If   
          
DiasAmonestacion= Amo

END FUNCTION ','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = 'A17F3A43-305C-4CDB-AA15-A1790D6B483D';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('A17F3A43-305C-4CDB-AA15-A1790D6B483D','DiasIncapacidad','Determina la Cantidad de Dias a Descontar producto de una Accion de Incapacidad (suspension del IGSS Mensual','FUNCTION DiasIncapacidad()

vdias = 0

If Not (DiasIncapacidades.bof And DiasIncapacidades.EOF) Then 

	Do While Not DiasIncapacidades.EOF                                    

		VDIAS = VDIAS + cdbl(DiasIncapacidades.Fields("PIE_DIAS").Value)

		DiasIncapacidades.movenext       

	Loop         

End If               

DiasIncapacidad= VDIAS

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = 'A8FCD9E4-04EF-4DFD-B0E5-B9BB26C32BB7';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('A8FCD9E4-04EF-4DFD-B0E5-B9BB26C32BB7','DescuentoEventual','Determina el Monto a Descontar por Otros Descuentos al Empelado Mensual','FUNCTION DescuentoEventual()

OtrosDesc = 0.00  
Liquido = 0.00

Liquido = Factores("TotalIngresos").Value - _            
          Factores("SeguroSocial").Value - _            
          Factores("BoletoOrnato").Value	 - _            
          Factores("ISR").Value - _
          Factores("SeguroMedico").Value            

sum = 0
valor = 0 

if DescuentosEventuales.RecordCount > 0 then
	DescuentosEventuales.MoveFirst
	do until DescuentosEventuales.EOF
		valor = round(DescuentosEventuales.Fields("ods_valor_a_descontar").Value, 2)
   
		if valor > liquido then
			DescuentosEventuales.Fields("ods_aplicado_planilla").Value = 0
		else
			liquido = liquido - valor
			sum = sum + valor
			DescuentosEventuales.Fields("ods_aplicado_planilla").Value = 1
			agrega_descuentos_historial Agrupadores, _
											DescuentosEstaPlanilla, _
											Empleados.Fields("EMP_CODIGO").Value, _
											Periodos.Fields("PPL_CODIGO").Value, _
											DescuentosEventuales.Fields("ODS_CODTDC").Value, _
											valor, 0, 0, DescuentosEventuales.Fields("ods_codmon").Value, 0, "Dias"
		end if
   
		DescuentosEventuales.MoveNext
	loop
end if
 
DescuentoEventual= sum

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = 'BC0D5EE6-3D2E-43D8-B8C7-17152031CCC6';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('BC0D5EE6-3D2E-43D8-B8C7-17152031CCC6','RetroactivoBonoPacatado','Determina el Monto por Retroactivo a pagar al empleado por Bonificacion Pactada Mensual','FUNCTION RetroactivoBonoPacatado()

Retroactivo = 0.00
dias = 0



	If Not (RetroactivosBonoPactado.bof And RetroactivosBonoPactado.EOF) Then
                   
		Do While Not RetroactivosBonoPactado.EOF
                                             
			dias = RetroactivosBonoPactado.Fields("PIR_DIAS_RETROACTIVO").Value 
            
			Retroactivo = Retroactivo + RetroactivosBonoPactado.Fields("PIR_MONTO_RETROACTIVO").Value 

			RetroactivosBonoPactado.movenext
		Loop
	End If
       
     
	If Not IsNull(Factores("RetroactivoBonoPacatado").CodTipoIngreso) And Retroactivo > 0 Then
		agrega_ingresos_historial Agrupadores, _
								IngresosEstaPlanilla, _
								Empleados.Fields("EMP_CODIGO").Value, _
								Periodos.Fields("PPL_CODIGO").Value, _
								Factores("RetroactivoBonoPacatado").CodTipoIngreso, _
								Retroactivo, RubrosBonoPactado.Fields("esa_codmon").Value, dias, "Dias"
	End If

        

RetroactivoBonoPacatado= Retroactivo

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = '892C71C1-98ED-45A2-B0B9-9FBCA7F0974C';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('892C71C1-98ED-45A2-B0B9-9FBCA7F0974C','Neto','Determina el Liquido a Percibir por el Empleado en el Periodo Mensual','FUNCTION Neto()

Dim Neto       
Neto = 0       

Neto = Factores("TotalIngresos").Value - _
       Factores("SeguroSocial").Value - _
       Factores("BoletoOrnato").Value - _
       Factores("SeguroMedico").Value - _
       Factores("DescuentoEventual").Value - _
       Factores("DescuentoCiclico").Value - _
       Factores("DescuentoCiclicoPorcentaje").Value - _
       Factores("ISR").Value 

Neto = round(Neto, 2)

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = '10521867-ECDF-4116-92CB-D7A2C8958A0E';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('10521867-ECDF-4116-92CB-D7A2C8958A0E','ComplementoSalario','Complemento de Salario a Empleados nuevos en el periodo Anterior y que no tienen pago efectuado Mensual','FUNCTION ComplementoSalario()

'' Calcula los complementos de empleados que ingresaron en el periodo anterior siempre y cuando el anterior
'' sea el segundo periodo y que no haya tenido pago en ese periodo.
'' Los dias que se toman son de la fecha de ingreso hasta el dia 30 del mes, dado que el salario es en base
'' a 30 dias.

vTotal = 0.00
vsalm = 0.00
vdias = 0.00
codmon = "GTQ"

if Periodos.Fields("PPL_FRECUENCIA").Value = 2 Then 

   if not (RubrosSalario.Bof and RubrosSalario.Eof) then
      codmon = RubrosSalario.Fields("esa_codmon").Value
   end if

   if not(ComplementosSalario.BOF and ComplementosSalario.EOF) then
      
      vdias = ComplementosSalario.Fields("eni_dias_pago").Value  
      vsalm = Factores("SalarioActual").Value

      vTotal = round((vsalm / 30.00) * vdias, 2)

   end if

   If Not IsNull(Factores("ComplementoSalario").CodTipoIngreso) And vtotal > 0 Then
	  agrega_ingresos_historial Agrupadores, _
								IngresosEstaPlanilla, _
								Empleados.Fields("EMP_CODIGO").Value, _
								Periodos.Fields("PPL_CODIGO").Value, _
								Factores("ComplementoSalario").CodTipoIngreso, _
								vtotal, codmon, vdias, "Dias"
   end if

end if

ComplementoSalario= vTotal

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = '2736ADB0-E80A-4994-A54C-9367C04CAA59';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('2736ADB0-E80A-4994-A54C-9367C04CAA59','BonoPactado','Valor de la Bonificacion Pactada Correspondiente al Periodo Mensual','FUNCTION BonoPactado()

Dim bon
Dim DiasDelMes
Dim Dias  

bon = 0  
DiasDelMes = 0
Dias = 0

if Periodos.Fields("PPL_FRECUENCIA").Value = 2 Then 

	DiasDelMes = Factores("DiasDelMes").Value 

	if DiasDelMes > 0 then     
		bon = Factores("BonoPactadoMensual").Value 
		
		dias = Factores("DiasTrabajados").Value + _
			   Factores("DiasIncapacidad").Value                    

		If bon > 0 Then       
			bon = bon / DiasDelMes * dias  
		End If 
	End If                   

	If Not IsNull(Factores("BonoPactado").CodTipoIngreso) And bon > 0 Then    
		agrega_ingresos_historial Agrupadores, _
									IngresosEstaPlanilla, _
									Empleados.Fields("EMP_CODIGO").Value, _
									Periodos.Fields("PPL_CODIGO").Value, _
									Factores("BonoPactado").CodTipoIngreso, _
									bon, RubrosBonoPactado.Fields("esa_codmon").Value, dias, "Dias"
	end if

End If

BonoPactado= bon 

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = 'C65A9D17-52B6-4764-9912-E48C24C9A60C';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('C65A9D17-52B6-4764-9912-E48C24C9A60C','BonoPactadoMensual','Bono Pactado Mensual ajustado por si hubo incrementos o si el ingreso fue en el mes Mensual','FUNCTION BonoPactadoMensual()

dim bonomensual
dim bonoanterior
dim fini

bonomensual = 0
bonoanterior = 0

DiasAnterior = 0
DiasActual = 0
   
'' --- BONIFICACION PACTADA DEL MES ACTUAL
bonomensual = round(Factores("BonoPactadoActual").Value,2)
   
'' --- AJUSTA INGRESO POR CONTRATACION DENTRO DEL PERIODO
if Empleados.Fields("EMP_FECHA_INGRESO").Value > Periodos.Fields("PPL_FECHA_INI").Value then
	bonomensual = round(bonomensual / 30 * (30 - Day(Empleados.Fields("EMP_FECHA_INGRESO").Value) + 1), 2)
	fini = Empleados.Fields("EMP_FECHA_INGRESO").Value
else
	fini = Periodos.Fields("PPL_FECHA_INI").Value
end if
      
'' --- CALCULA EL BONO PACTADO ANTERIOR CONSIDERANDO QUE HUBO INCREMENTOS
if not (RubrosBonoPactado.Bof and RubrosBonoPactado.Eof) then
if isnull( RubrosBonoPactado.Fields("esa_valor_anterior").Value ) or RubrosBonoPactado.Fields("esa_valor_anterior").Value = 0.00 then
	bonoanterior = bonmensual
else
	if isnull(RubrosBonoPactado.Fields("esa_exp_valor").Value) then
		bonoanterior = RubrosBonoPactado.Fields("esa_valor_anterior").Value 
	else
		if RubrosBonoPactado.Fields("esa_exp_valor").Value = "Diario" then
			bonoanterior = RubrosBonoPactado.Fields("esa_valor_anterior").Value * 30
		else
			bonoanterior = RubrosBonoPactado.Fields("esa_valor_anterior").Value 
		end if
	end if
end if
   
   
'' --- CALCULA EL BONO PACTADO CONSIDERANDO QUE HUBO INCREMENTOS
if not isnull( RubrosBonoPactado.Fields("esa_valor_anterior").Value ) then
	if RubrosBonoPactado.Fields("esa_fecha_vigencia").Value > fini and _
		RubrosBonoPactado.Fields("esa_fecha_vigencia").Value <= Periodos.Fields("PPL_FECHA_FIN").Value then

		if (day(RubrosBonoPactado.Fields("esa_valor_anterior").Value) > 30) OR (MONTH(RubrosBonoPactado.Fields("esa_fecha_vigencia").Value) = 2 AND day(RubrosBonoPactado.Fields("esa_fecha_vigencia").Value) >= 28) THEN			
			DiasAnterior = 30 - DAY(FINI)
		ELSE
			DIASANTERIOR = DATEDIFF("d", fini, RubrosBonoPactado.Fields("esa_fecha_vigencia").Value) 
		end if

		DiasActual = 30 - DAY(RubrosBonoPactado.Fields("esa_valor_anterior").Value) + 1

		bonomensual = round((bonoanterior / 30) * DiasAnterior, 2) + _
				round((bonomensual / 30) * DiasActual, 2)   

	end if
end if   

end if 
'' --- Valor de Retorno de la Función
BonoPactadoMensual= bonomensual

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = '2C3D0726-3D4F-430C-8DF8-65BB6D1E3383';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('2C3D0726-3D4F-430C-8DF8-65BB6D1E3383','BonoLeyActual','Obtiene el valor de la bonificacion de Ley actual Mensual','FUNCTION BonoLeyActual()
bono = 0.00

'' - CALCULA LA BONIFICACION DE LEY ACTUAL
if not (RubrosBonoLey.Bof and RubrosBonoLey.Eof) then
if isnull( RubrosBonoLey.Fields("esa_valor").Value ) then
	bono = 0.00
else
	bono = RubrosBonoLey.Fields("esa_valor").Value
end if
end if
   
BonoLeyActual= bono
END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = 'BA92629E-E0FD-439C-BAA9-74415954B58F';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('BA92629E-E0FD-439C-BAA9-74415954B58F','SueldoMensual','Sueldo Mensual ajustado por si hubo incrementos o si el ingreso fue en el mes Mensual','FUNCTION SueldoMensual()

salmensual = 0.00
salanterior = 0.00 

DiasAnterior = 0
DiasActual = 0

'' --- SALARIO MENSUAL ACTUAL
salmensual = round(Factores("SalarioActual").Value,2)
   writelog " Sueldo Mensual " & cstr(salmensual)
'' --- AJUSTA INGRESO POR CONTRATACION DENTRO DEL PERIODO
if Empleados.Fields("EMP_FECHA_INGRESO").Value > Periodos.Fields("PPL_FECHA_INI").Value then
	salmensual = round(salmensual / 30.00 * (30.00 - day(Empleados.Fields("EMP_FECHA_INGRESO").Value) + 1), 2)
	fini = Empleados.Fields("EMP_FECHA_INGRESO").Value
else
	fini = Periodos.Fields("PPL_FECHA_INI").Value
end if
   
   
'' --- CALCULA EL SALARIO ANTERIOR SI TUVO AUMENTOS
if not (RubrosSalario.Bof and RubrosSalario.Eof) then
if isnull( RubrosSalario.Fields("esa_valor_anterior").Value ) OR RubrosSalario.Fields("esa_valor_anterior").Value = 0.00 then
	salanterior = salmensual
else
	if isnull(RubrosSalario.Fields("esa_exp_valor").Value) then
		salanterior = RubrosSalario.Fields("esa_valor_anterior").Value 
	else
		if RubrosSalario.Fields("esa_exp_valor").Value = "Hora" then
			salanterior = RubrosSalario.Fields("esa_valor_hora").Value * RubrosSalario.Fields("esa_num_horas_x_mes").Value
		else
			salanterior = RubrosSalario.Fields("esa_valor_anterior").Value
		end if
	end if
end if
   
'' --- CALCULA EL SALARIO CONSIDERANDO QUE HUBO INCREMENTOS
if not isnull( RubrosSalario.Fields("esa_valor_anterior").Value ) then
	if RubrosSalario.Fields("esa_fecha_vigencia").Value >= fini and _
		RubrosSalario.Fields("esa_fecha_vigencia").Value <= Periodos.Fields("PPL_FECHA_FIN").Value then

		if (day(RubrosSalario.Fields("esa_fecha_vigencia").Value) > 30) OR (MONTH(RubrosSalario.Fields("esa_fecha_vigencia").Value) = 2 AND day(RubrosSalario.Fields("esa_fecha_vigencia").Value) >= 28) THEN			
			DiasAnterior = 30 - DAY(FINI)
		ELSE
			DIASANTERIOR = DATEDIFF("d", fini, RubrosSalario.Fields("esa_fecha_vigencia").Value) 
		end if

		DiasActual = 30 - DAY(RubrosSalario.Fields("esa_fecha_vigencia").Value) + 1

		salmensual = round((salanterior / 30.00) * diasanterior, 2) + _
				round((salmensual / 30.00) * diasactual, 2)
   

	end if
end if   
end if   
'' --- Valor de Retorno de la Función

SueldoMensual= salmensual

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = '8B1822AA-600A-4BF7-BA79-2C727613F8C5';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('8B1822AA-600A-4BF7-BA79-2C727613F8C5','PrestacionIncapacidad','Complemento por suspension del seguro social Mensual','Function PrestacionIncapacidad()

valor_incap = 0.00
valor_total = 0.00
dias_incap = 0.00
dias_total = 0.00

CODMON = "GTQ"

if Periodos.Fields("PPL_FRECUENCIA").Value = 2 Then 
   
   if DiasIncapacidades.RecordCount > 0 then
     
      DiasIncapacidades.MoveFirst

      If Not (DiasIncapacidades.bof And DiasIncapacidades.EOF) Then 

         Do While Not DiasIncapacidades.EOF   

            dias_incap = cdbl(DiasIncapacidades.Fields("PIE_DIAS").Value)
            valor_incap = cdbl(DiasIncapacidades.Fields("PIE_PAGO_EN_NOMINA").Value)

            dias_total = dias_total + dias_incap
            valor_total = valor_total + valor_incap

            DiasIncapacidades.movenext

         Loop

         If Not IsNull(Factores("PrestacionIncapacidad").CodTipoIngreso) And Valor_total > 0 Then
            agrega_ingresos_historial Agrupadores, _
                                IngresosEstaPlanilla, _
                                Empleados.Fields("EMP_CODIGO").Value, _
                                Periodos.Fields("PPL_CODIGO").Value, _
                                Factores("PrestacionIncapacidad").CodTipoIngreso, _
                                Valor_Total, CODMON, dias_total, "Dias"

         End If

      End If

   End If

End If

PrestacionIncapacidad= valor_total

End Function','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = '24B03A26-2304-404D-8AB0-E05B66944507';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('24B03A26-2304-404D-8AB0-E05B66944507','DiasDelMes','Dias del Mes sera 30 o los dias desde la fecha de ingreso en el mes hasta 30 Mensual','FUNCTION DiasDelMes()

dim Dias

Dias = 0.00

if Empleados.Fields("EMP_FECHA_INGRESO").Value > Periodos.Fields("PPL_FECHA_INI").Value and _
	Empleados.Fields("EMP_FECHA_INGRESO").Value <= Periodos.Fields("PPL_FECHA_FIN").Value then
	Dias = 30.00 - Day(Empleados.Fields("EMP_FECHA_INGRESO").Value) + 1
else
	Dias = 30.00
end if
   

DiasDelMes= Dias

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = '771272D6-ABE4-46D1-8904-FD92B09C9709';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('771272D6-ABE4-46D1-8904-FD92B09C9709','AnticipoQuincenal','Valor del Anticipo a pagar en la quincena','FUNCTION AnticipoQuincenal()

DiasMes = 0
DiasQuincena = 0
Anticipo = 0.00
SalarioV = 0  
BonoPactadoV = 0
BonoLeyV = 0
dias = 0
Porcentaje = 0

''--- Toma Dias del Mes que contiene 30 o los dias desde la fecha de Ingreso
''--- Porque el Salario, BonoPactado y BonoLey solo corresponden a ese numero de dias
''--- a ese numero le resta 15 que corresponde a la segunda quincena

DiasMes = Factores("DiasDelMes").Value 
DiasQuincena = DiasMes - 15
   writelog "En Anticipo"
if Periodos.Fields("PPL_FRECUENCIA").Value = 1 and DiasQuincena > 0 then

	if Empleados.Fields("dpl_anticipo_activo").Value then
	   writelog " ENTRO "
	   Porcentaje = Empleados.Fields("dpl_porcentaje_anticipo").Value 
	Else Porcentaje = ParametrosAplicacion.Fields("pge_porcentaje_anticipo").Value
	End If
	   writelog " Porcentale" & cstr(Porcentaje)
	salariov     = Factores("SalarioActual").Value * Porcentaje / 100.00
	BonoLeyv     = Factores("BonoLeyActual").Value * Porcentaje / 100.00
	BonoPactadoV = Factores("BonoPactadoActual").Value * Porcentaje / 100.00

	dias = Factores("DiasTrabajados").Value      
	writelog " Salariov: " & cstr(salariov)	
    writelog " BonoLeyv: " & cstr(BonoLeyv)	
    writelog " BonoPactadoV: " & cstr(BonoPactadoV)	
    writelog " Dias:" & cstr(dias)
	If salariov > 0 Then       
	   salariov = salariov / DiasQuincena * dias  
	End If 

	If BonoLeyv > 0 Then       
	   BonoLeyv = BonoLeyv / DiasQuincena * (dias + Factores("DiasIncapacidad").Value)
	End If 
	
	If BonoPactadoV > 0 Then       
	   BonoPactadoV = BonoPactadoV / DiasQuincena * dias
	End If 

	Anticipo = Salariov + BonoLeyv + BonoPactadoV

	If Not IsNull(Factores("AnticipoQuincenal").CodTipoIngreso) And Anticipo > 0 Then    
		agrega_ingresos_historial Agrupadores, _
									IngresosEstaPlanilla, _
									Empleados.Fields("EMP_CODIGO").Value, _
									Periodos.Fields("PPL_CODIGO").Value, _
									Factores("AnticipoQuincenal").CodTipoIngreso, _
									Anticipo, Periodos.Fields("tpl_codmon").Value, dias, "Dias"

	end if

End If

AnticipoQuincenal = Anticipo 

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = '9AF92F8E-9E38-439E-AE48-C798574FE27F';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('9AF92F8E-9E38-439E-AE48-C798574FE27F','DescuentoAnticipo','Descuento por anticipo de Salario','FUNCTION DescuentoAnticipo()

DescuentoAnticipo = 0
valor = 0
filtroactual = ""

If Periodos.Fields("PPL_FRECUENCIA").Value = 2 then
	if NOT(PeriodoAnterior.BOF and PeriodoAnterior.EOF) then
		If Not ((IngresosPlanillaAnterior.bof) And (IngresosPlanillaAnterior.EOF)) Then
		
			filtroactual = IngresosPlanillaAnterior.filter          

			IngresosPlanillaAnterior.filter = filtroactual & " and inn_codppl = " & PeriodoAnterior.Fields("PPL_CODIGO").Value _
												& " and inn_codtig = " & Factores("AnticipoQuincenal").CodTipoIngreso

			Do While Not IngresosPlanillaAnterior.EOF                                    
				valor = valor + IngresosPlanillaAnterior.Fields("inn_valor").Value                        
				IngresosPlanillaAnterior.movenext       
			Loop  

			IngresosPlanillaAnterior.filter = filtroactual           
		end if               
	End if
  
	If Not IsNull( Factores("DescuentoAnticipo").CodTipoDescuento) And valor > 0 Then       

		agrega_descuentos_historial Agrupadores, _
									DescuentosEstaPlanilla, _
									Empleados.Fields("EMP_CODIGO").Value, _
									Periodos.Fields("PPL_CODIGO").Value, _
									Factores("DescuentoAnticipo").CodTipoDescuento, _
									ROUND(valor, 2), 0, 0, Periodos.Fields("tpl_codmon").Value, 0, "Dias"

	End If
End if

DescuentoAnticipo  = valor

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = 'a1f666e2-3cb0-4df9-85d4-2d6c40cbdcc6';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('a1f666e2-3cb0-4df9-85d4-2d6c40cbdcc6','Sustitucion','Monto de la sustitucions o coberturas','Function Sustitucion()
Monto = 0.00
Dias = 0
Valor_total = 0.00
dias_total = 0

CODMON = "GTQ"

if Sustituciones.RecordCount > 0 then
	Sustituciones.MoveFirst
end if

If Not (Sustituciones.bof And Sustituciones.EOF) Then 

Do While Not Sustituciones.EOF   

Dias = cdbl(Sustituciones.Fields("ste_dias").Value)
Monto = cdbl(Sustituciones.Fields("ste_valor").Value)

dias_total = dias_total + Dias
valor_total = valor_total + Monto

Sustituciones.movenext

Loop

END IF

If Not IsNull(Factores("Sustitucion").CodTipoIngreso) And Valor_total > 0 Then
      agrega_ingresos_historial Agrupadores, _
                                IngresosEstaPlanilla, _
                                Empleados.Fields("EMP_CODIGO").Value, _
                                Periodos.Fields("PPL_CODIGO").Value, _
                                Factores("Sustitucion").CodTipoIngreso, _
                                Valor_Total, CODMON, dias_total, "Dias"

End If

Sustitucion = Valor_Total

End Function','money','gt',0);

commit transaction;
