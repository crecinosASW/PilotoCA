/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

begin transaction

delete from sal.fat_factores_tipo_planilla 
WHERE EXISTS (SELECT 1 FROM sal.tpl_tipo_planilla WHERE tpl_codigo = fat_codtpl AND tpl_codigo_visual IN ('1'));
delete from sal.ftp_formulacion_tipos_planilla 
WHERE EXISTS (SELECT 1 FROM sal.tpl_tipo_planilla WHERE tpl_codigo = ftp_codtpl AND tpl_codigo_visual IN ('1'));

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = 'A0A72C19-098F-496E-8A98-DE5A963AD621';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('A0A72C19-098F-496E-8A98-DE5A963AD621','GT_PrestacionesPuesto','Prestaciones del Puesto Mensual','FUNCTION GT_PrestacionesPuesto()

PrestaPuesto = 0

if prestaciones_Puesto.RecordCount > 0 then
	prestaciones_Puesto.MoveFirst
	do until prestaciones_puesto.EOF
		if (cint(Pla_Periodo.Fields("PPL_FRECUENCIA").Value) = prestaciones_puesto.fields("pre_frecuencia").value) or (prestaciones_puesto.fields("pre_frecuencia").value = 6) then

			agrega_ingresos_historial Agrupadores, _ 
						IngresosEstaPlanilla, _
						Emp_InfoSalario.Fields("EMP_CODIGO").Value, _
						Pla_Periodo.Fields("PPL_CODIGO").Value, _
						prestaciones_puesto.Fields("pre_codingreso").Value , _
						round(prestaciones_puesto.Fields("ppp_VALOR").Value, 2), _
						prestaciones_puesto.Fields("ppp_codmon").Value, 0, "Dias"
   
			PrestaPuesto = PrestaPuesto + round(prestaciones_puesto.Fields("ppp_VALOR").Value, 2)

		end if

		prestaciones_puesto.MoveNext
	loop
end if

GT_PrestacionesPuesto= PrestaPuesto

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = '814219DD-1ED1-415F-BCAD-2ACFC7B3AB6B';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('814219DD-1ED1-415F-BCAD-2ACFC7B3AB6B','GT_SalarioBruto','Suma de Todos los Ingresos Devengados por el Empleado en el periodo Mensual','FUNCTION GT_SalarioBruto()

Dim bruto       
bruto = 0       

bruto = Round(Factores("GT_Salario").Value + _        
              Factores("GT_Extraordinario").Value + _          
              Factores("GT_BonoLey").Value + _    
              Factores("GT_BonoPactado").Value + _   
              Factores("GT_ComplNuevosSalario").Value + _                
              Factores("GT_ComplNuevosBonoPacta").Value + _                
              Factores("GT_ComplNuevosBonoLey").Value + _     
              Factores("GT_CompSuspensionIGSS").Value + _	 		  
              Factores("GT_OtrosIngresos").Value + _
              Factores("GT_PrestacionesEmpleado").Value + _
              Factores("GT_PrestacionesPuesto").Value + _
              Factores("GT_MontoVacaciones").Value + _
              Factores("GT_MontoVacacionesBono").Value + _
              Factores("GT_RetroactivoSalario").Value + _
              Factores("GT_RetroBoniLey").Value + _
              Factores("GT_Sustitucion").Value + _
              Factores("GT_Ingresos_Ciclicos").Value + _
              Factores("GT_RetroBoniPactada").Value, 2) 

GT_SalarioBruto= bruto

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = 'A5161DEB-42C0-4E0E-8175-84ACDC79C626';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('A5161DEB-42C0-4E0E-8175-84ACDC79C626','GT_OtrosIngresos','Pago de Ingresos Eventuales Mensual','FUNCTION GT_OtrosIngresos()

OtrosIng = 0
  
if Emp_OtrosIngresos.RecordCount > 0 then
	Emp_OtrosIngresos.MoveFirst
	
	do until Emp_OtrosIngresos.EOF
		vc = round(Emp_OtrosIngresos.Fields("oin_valor_a_pagar").Value, 2)
		agrega_ingresos_historial Agrupadores, _
									IngresosEstaPlanilla, _
									Emp_InfoSalario.Fields("EMP_CODIGO").Value, _
									Pla_Periodo.Fields("PPL_CODIGO").Value, _
									Emp_OtrosIngresos.Fields("OIN_CODTIG").Value, _
									vc, Emp_OtrosIngresos.Fields("oin_codmon").Value, 0, "Dias"
									
		OtrosIng = OtrosIng + vc
		
		Emp_OtrosIngresos.MoveNext
	loop
end if

GT_OtrosIngresos= OtrosIng

END FUNCTION','double','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = '40F94D1F-E492-45DA-B062-7357505C5ADA';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('40F94D1F-E492-45DA-B062-7357505C5ADA','GT_BonoLeyMensual','Bono de Ley Mensual ajustado por si hubo incrementos o si el ingreso fue en el mes Mensual','FUNCTION GT_BonoLeyMensual()

bonomensual = 0
bonoanterior = 0

DiasAnterior = 0
DiasActual = 0
   
'' --- BONIFICACION DE LEY ACTUAL
bonomensual = round(Factores("GT_BonoLeyActual").Value,2)
   
'' --- AJUSTA INGRESO POR CONTRATACION DENTRO DEL PERIODO
if Emp_InfoSalario.Fields("EMP_FECHA_INGRESO").Value > Pla_Periodo.Fields("PPL_FECHA_INI").Value then
	bonomensual = round(bonomensual / 30 * (30 - Day(Emp_InfoSalario.Fields("EMP_FECHA_INGRESO").Value) + 1), 2)
	fini = Emp_InfoSalario.Fields("EMP_FECHA_INGRESO").Value
else
	fini = Pla_Periodo.Fields("PPL_FECHA_INI").Value
end if
      
'' --- CALCULA EL BONO DE LEY ANTERIOR CONSIDERANDO QUE HUBO INCREMENTOS
if not (RubroBoniLey.Bof and RubroBoniLey.Eof) then
if isnull( RubroBoniLey.Fields("esa_valor_anterior").Value ) or RubroBoniLey.Fields("esa_valor_anterior").Value = 0.00 then
	bonoanterior = bonomensual
else
	if isnull(RubroBoniLey.Fields("esa_exp_valor").Value) then
		bonoanterior = RubroBoniLey.Fields("esa_valor_anterior").Value 
	else
		if RubroBoniLey.Fields("esa_exp_valor").Value = "Diario" then
			bonoanterior = RubroBoniLey.Fields("esa_valor_anterior").Value * 30
		else
			bonoanterior = RubroBoniLey.Fields("esa_valor_anterior").Value 
		end if
	end if
end if
   
'' --- CALCULA EL SALARIO CONSIDERANDO QUE HUBO INCREMENTOS
if not isnull( RubroBoniLey.Fields("esa_valor_anterior").Value ) then
	if RubroBoniLey.Fields("esa_fecha_vigencia").Value > fini and _
		RubroBoniLey.Fields("esa_fecha_vigencia").Value <= Pla_Periodo.Fields("PPL_FECHA_FIN").Value then

		if (day(RubroBoniLey.Fields("esa_fecha_vigencia").Value) > 30) OR (MONTH(RubroBoniLey.Fields("esa_fecha_vigencia").Value) = 2 AND day(RubroBoniLey.Fields("esa_fecha_vigencia").Value) >= 28) THEN			
			DiasAnterior = 30 - DAY(FINI)
		ELSE
			DIASANTERIOR = DATEDIFF("d", fini, RubroBoniLey.Fields("esa_fecha_vigencia").Value) 
		end if

		DiasActual = 30 - DAY(RubroBoniLey.Fields("esa_fecha_vigencia").Value) + 1

		bonomensual = round((bonoanterior / 30.00) * DiasAnterior, 2) + _
				round((bonomensual / 30.00)  * DiasActual, 2)   

	end if
end if   

end if

'' --- Valor de Retorno de la Función
GT_BonoLeyMensual= bonomensual

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = '97DF903D-46A1-477D-921F-8E325484FF3C';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('97DF903D-46A1-477D-921F-8E325484FF3C','GT_DiasNoTrabajados','Obtiene el Tiempo No Trabajado por el Empleado Mensual','FUNCTION GT_DiasNoTrabajados()

dnt = 0  

If Emp_TmpNoTrabajado.RecordCount > 0 Then         
	Emp_TmpNoTrabajado.MoveFirst         
	
	Do Until Emp_TmpNoTrabajado.EOF              

		dnt = dnt + cint(Emp_TmpNoTrabajado.Fields("DIAS").Value)

		Emp_TmpNoTrabajado.movenext       
	Loop         

End If             

GT_DiasNoTrabajados= dnt  

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = '4669FA17-9457-4618-9E79-20B352A3DB8F';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('4669FA17-9457-4618-9E79-20B352A3DB8F','GT_BonoLey','Valor del Bono de Ley correspondiente al Periodo Mensual','FUNCTION GT_BonoLey()

Dim bon
Dim DiasDelMes
Dim Dias  

bon = 0  
DiasDelMes = 0
Dias = 0

if Pla_Periodo.Fields("PPL_FRECUENCIA").Value = 2 then

	DiasDelMes = Factores("GT_DiasDelMes").Value 
			 
	if DiasDelMes > 0 then     
		bon = Factores("GT_BonoLeyMensual").Value 
		
		dias =  Factores("GT_DiasTrabajados").Value + _ 
		        Factores("GT_DiasNOTrabajados").Value + _
		        Factores("GT_DiasAmonestacion").Value + _ 
		        Factores("GT_DiasIncapacidad").Value + _
		        Factores("GT_DiasVacaciones").Value		

		If bon > 0 Then       
			bon = bon / DiasDelMes * dias  
		End If 
		
	End If                   

	If Not IsNull(Factores("GT_BonoLey").CodTipoIngreso) And bon > 0 Then    
		agrega_ingresos_historial Agrupadores, _
									IngresosEstaPlanilla, _
									Emp_InfoSalario.Fields("EMP_CODIGO").Value, _
									Pla_Periodo.Fields("PPL_CODIGO").Value, _
									Factores("GT_BonoLey").CodTipoIngreso, _
									bon, RubroBoniLey.Fields("esa_codmon").Value, dias, "Dias"
	end if

End If

GT_BonoLey= bon 

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = 'BEFA07C4-F284-4DF6-8B76-57417CD8A65A';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('BEFA07C4-F284-4DF6-8B76-57417CD8A65A','GT_Extraordinario','Determina el Monto devengado el empleado por Horas Extras Mensual','FUNCTION GT_Extraordinario()

sum = 0.00
nh = 0

if Pla_Periodo.Fields("PPL_FRECUENCIA").Value = 2 Then 

   mon = "GTQ"

   if Emp_HorasExtras.Recordcount > 0 then
      
      Emp_HorasExtras.MoveFirst
	
      do until Emp_HorasExtras.EOF

         sum = sum + round(Emp_HorasExtras.Fields("EXT_VALOR").Value, 2)
         nh = nh + round(Emp_HorasExtras.Fields("EXT_NUMERO_HORA").Value, 2)

         Emp_HorasExtras.MoveNext
      loop
	
      If sum > 0 then
	   		agrega_ingresos_historial Agrupadores, _
									IngresosEstaPlanilla, _
									Emp_InfoSalario.Fields("EMP_CODIGO").Value, _
									Pla_Periodo.Fields("PPL_CODIGO").Value, _
									Factores("GT_Extraordinario").CodTipoIngreso , _
									round(sum, 2), _
									mon, _
									round(nh, 2), "Horas"
      End if

   End if

End if

GT_Extraordinario= sum

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = '26322A5C-2E2C-4E43-B245-9795A8EC2B24';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('26322A5C-2E2C-4E43-B245-9795A8EC2B24','GT_SalarioActual','Determina la parte del Salario Nominal del Empleado Mensual','FUNCTION GT_SalarioActual()

salq = 0.00

'' - CALCULA SALARIO ACTUAL
if not (RubroSalario.Bof and RubroSalario.Eof) then
if isnull( RubroSalario.Fields("esa_valor").Value ) then
	salq = 0
else
	if isnull(RubroSalario.Fields("esa_exp_valor").Value) then
		salq = RubroSalario.Fields("esa_valor").Value
	else
		if RubroSalario.Fields("esa_exp_valor").Value = "Hora" then
			salq = RubroSalario.Fields("esa_valor_hora").Value * RubroSalario.Fields("esa_num_horas_x_mes").Value
		else
			salq = RubroSalario.Fields("esa_valor").Value
		end if
	end if
end if
end if
  
GT_SalarioActual= salq

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = '61281C0E-9C67-440B-9C1B-DC0BAE7397BD';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('61281C0E-9C67-440B-9C1B-DC0BAE7397BD','GT_ValorDescCiclicos','Determina el Monto a Descontar al empleado por Prestamos Mensual','FUNCTION GT_ValorDescCiclicos()

Dim dc  
Dim vc  
Dim Liquido  
Dim Saldo  
Dim lfilter                   

Liquido = Factores("GT_SalarioBruto").Value - _    
		   Factores("GT_SeguroSocial").Value - _            
		   Factores("GT_DescBoletoOrnato").Value - _            
      	   Factores("GT_SeguroMedico").Value - _         
		   Factores("GT_OtrosDescuentos").Value - _
		   Factores("GT_DescuentoISR").Value

dc = 0
vc = 0
aplicada = False


Do Until CuotasDescuentosCiclicos.EOF

	vc = Round(CuotasDescuentosCiclicos.Fields("cdc_valor_cobrado").Value, 2)

	If (liquido - vc) > 0 Then
		aplicada = True
		liquido = liquido - vc
		dc = dc + vc
		CuotasDescuentosCiclicos.Fields("cdc_fecha_descuento").Value = Pla_Periodo.Fields("PPL_FECHA_PAGO").Value
		CuotasDescuentosCiclicos.Fields("cdc_aplicado_planilla").Value = 1

		agrega_descuentos_historial Agrupadores, _
										DescuentosEstaPlanilla, _
										Emp_InfoSalario.Fields("EMP_CODIGO").Value, _
										Pla_Periodo.Fields("PPL_CODIGO").Value, _
										CuotasDescuentosCiclicos.Fields("dcc_codtdc").Value, _
										vc, 0, 0, CuotasDescuentosCiclicos.Fields("dcc_codmon").Value, 0, "Dias"
	Else
		aplicada = False
	    CuotasDescuentosCiclicos.Fields("cdc_aplicado_planilla").Value = 0    
	End If
    
	CuotasDescuentosCiclicos.MoveNext
Loop

GT_ValorDescCiclicos= dc

END FUNCTION
','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = '138584C5-182B-407A-834E-1CACD3726900';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('138584C5-182B-407A-834E-1CACD3726900','GT_filtroempleados','Determina que empleado participa en la planilla','FUNCTION GT_filtroempleados()

	FiltroEmpleados = (Emp_InfoSalario.Fields("EMP_FECHA_INGRESO").Value <= Pla_Periodo.Fields("PPL_FECHA_FIN").Value) and Emp_InfoSalario.Fields("EMP_CODTPL").Value = Pla_Periodo.Fields("ppl_codtpl").Value

	if FiltroEmpleados then
		writelog chr(10)
		writelog Emp_InfoSalario.Fields("emp_codigo").Value
	end if
	
''	writelog " "

GT_filtroempleados= FiltroEmpleados

end function ','boolean','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = 'D258CE6A-AFAB-4F7D-A199-D747A894F218';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('D258CE6A-AFAB-4F7D-A199-D747A894F218','GT_MontoVacacionesBono','Monto de Bono por vacaciones gozadas Mensual','FUNCTION GT_MontoVacacionesBono()

MontoBono = 0.00
DiasBono = 0
Valor_total = 0.00
dias_total = 0

CODMON = "GTQ"

if Emp_Dias_VacacionesPago.RecordCount > 0 then
	Emp_Dias_VacacionesPago.MoveFirst
end if

If Not (Emp_Dias_VacacionesPago.bof And Emp_Dias_VacacionesPago.EOF) Then 

Do While Not Emp_Dias_VacacionesPago.EOF   

DiasBono = cdbl(Emp_Dias_VacacionesPago.Fields("vca_dias_gozados").Value)
MontoBono = cdbl(Emp_Dias_VacacionesPago.Fields("vca_valor_bono").Value)

dias_total = dias_total + DiasBono
valor_total = valor_total + MontoBono

Emp_Dias_VacacionesPago.movenext

Loop
writelog " Vacaciones: " & cstr(Valor_total)
END IF

If Not IsNull(Factores("GT_MontoVacacionesBono").CodTipoIngreso) And Valor_total > 0 Then
      agrega_ingresos_historial Agrupadores, _
                                IngresosEstaPlanilla, _
                                Emp_InfoSalario.Fields("EMP_CODIGO").Value, _
                                Pla_Periodo.Fields("PPL_CODIGO").Value, _
                                Factores("GT_MontoVacacionesBono").CodTipoIngreso, _
                                Valor_Total, CODMON, dias_total, "Dias"

End If

GT_MontoVacacionesBono= Valor_Total

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = '38BF0B7A-152F-4798-BD8A-099939CB84B8';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('38BF0B7A-152F-4798-BD8A-099939CB84B8','GT_RetroactivoSalario','Determina el valor del Retroactivo de Incremento sobre Salario Otorgado al Empleado Mensual','FUNCTION GT_RetroactivoSalario()

Retroactivo = 0.00
dias = 0


               
	If Not (Emp_IncrementoSalarioRetro.bof And Emp_IncrementoSalarioRetro.EOF) Then

		Do While Not Emp_IncrementoSalarioRetro.EOF
                                             
			dias = Emp_IncrementoSalarioRetro.Fields("PIR_DIAS_RETROACTIVO").Value 
            
			Retroactivo = Retroactivo + Emp_IncrementoSalarioRetro.Fields("PIR_MONTO_RETROACTIVO").Value 

			emp_incrementosalarioretro.movenext
		Loop
	End If
       
     
	If Not IsNull(Factores("GT_RetroactivoSalario").CodTipoIngreso) And Retroactivo > 0 Then
		agrega_ingresos_historial Agrupadores, _
									IngresosEstaPlanilla, _
									Emp_InfoSalario.Fields("EMP_CODIGO").Value, _
									Pla_Periodo.Fields("PPL_CODIGO").Value, _
									Factores("GT_RetroactivoSalario").CodTipoIngreso, _
									Retroactivo, RubroSalario.Fields("esa_codmon").Value, dias, "Dias"
	End If

           

GT_RetroactivoSalario= Retroactivo

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = 'AC7628BE-24E0-499A-80B2-51FB9685D141';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('AC7628BE-24E0-499A-80B2-51FB9685D141','GT_ComplNuevosBonoLey','Complemento de Bonificacion de Ley a Empleados nuevos en el periodo Anterior y sin pago efectuado Mensual','FUNCTION GT_ComplNuevosBonoLey()

''----------------------------------------------------------------------------------------------------------
'' Calcula los complementos de empleados que ingresaron en el periodo anterior siempre y cuando el anterior
'' sea el segundo periodo y que no haya tenido pago en ese periodo.
'' Los dias que se toman son de la fecha de ingreso hasta el dia 30 del mes, dado que el salario es en base
'' a 30 dias.
''----------------------------------------------------------------------------------------------------------
vTotal = 0
vbonq = 0
vdias = 0
codmon = "GTQ"

if Pla_Periodo.Fields("PPL_FRECUENCIA").Value = 2 Then 

   if not (RubroBoniLey.Bof and RubroBoniLey.Eof) then
      codmon = RubroBoniLey.Fields("esa_codmon").Value
   end if


   if NOT(Emp_Nuevo_Ingreso.BOF and Emp_Nuevo_Ingreso.EOF) then

      vdias = Emp_Nuevo_Ingreso.Fields("eni_dias_pago").Value 
      vbonq = round(Factores("GT_BonoLeyMensual").Value,2)

      vTotal = round((vbonq / 30.00) * vdias, 2)

   end if


   If Not IsNull(Factores("GT_ComplNuevosBonoLey").CodTipoIngreso) And vtotal > 0 Then    
	   agrega_ingresos_historial Agrupadores, _
								IngresosEstaPlanilla, _
								Emp_InfoSalario.Fields("EMP_CODIGO").Value, _
								Pla_Periodo.Fields("PPL_CODIGO").Value, _
								Factores("GT_ComplNuevosBonoLey").CodTipoIngreso, _
								vtotal, codmon, vdias, "Dias"
     
   end if

end if

GT_ComplNuevosBonoLey= vTotal

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = 'AEF1DE9A-77AC-4B4A-B977-5EB3195C01CF';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('AEF1DE9A-77AC-4B4A-B977-5EB3195C01CF','GT_DiasTrabajados','Determina la Cantidad de Dias Efectivamente trabajados por el empleado en el periodo Mensual','FUNCTION GT_DiasTrabajados()

Dias = 0  
DiasIniciales = 0    
DiasLimite = 0

Fecha_Ingreso = Emp_InfoSalario.Fields("EMP_FECHA_INGRESO").Value

Fecha_Ini = Pla_Periodo.Fields("ppl_fecha_ini").Value 
Fecha_Fin = Pla_Periodo.Fields("ppl_fecha_fin").Value 

if Pla_Periodo.Fields("PPL_FRECUENCIA").Value = 1 Then
DiasLimite = 15
Else 
DiasLimite = 30
End if

If Emp_InfoSalario.Fields("plz_indefinida").Value = 1 Then 

	If Fecha_Ingreso >= Fecha_Ini And Fecha_Ingreso <= Fecha_Fin Then  
		diasiniciales = diasLimite - Day(Fecha_Ingreso) + 1
	ElseIf Fecha_Ingreso > Fecha_Fin Then                   
		diasiniciales = 0               
	Else            
		diasiniciales = DiasLimite
	End If  

Else       
	If Fecha_Ingreso >= Fecha_Ini And Fecha_Ingreso <= Fecha_fin Then
		If Fecha_Ingreso > Emp_InfoSalario.Fields("plz_fecha_fin").Value Then                   
			diasiniciales = 0              
		ElseIf Emp_InfoSalario.Fields("plz_fecha_fin").Value > Fecha_Fin Then
			diasiniciales = diasLimite - day(Fecha_Ingreso) + 1    
		Else                   
			diasiniciales = DateDiff("d", Fecha_Ingreso, Emp_InfoSalario.Fields("plz_fecha_fin").Value) + 1 
		End If         
	ElseIf Fecha_Ingreso > Fecha_Fin Then                   
		diasiniciales = 0               
	Else              
		If Emp_InfoSalario.Fields("plz_fecha_fin").Value > Fecha_Fin Then                   
			diasiniciales = DiasLimite
		Else                   
			diasiniciales = DateDiff("d", Fecha_ini, Emp_InfoSalario.Fields("plz_fecha_fin").Value) + 1
		End If       
	End If  
End If          


dias = diasiniciales - _
	Factores("GT_DiasNOTrabajados").Value - _
	Factores("GT_DiasAmonestacion").Value - _
	Factores("GT_DiasIncapacidad").Value - _
	Factores("GT_DiasVacaciones").Value


If dias < 0 Then       
	dias = 0  
Else       
	If dias > DiasLimite Then            
		dias = DiasLimite  
	End If  
End If          

GT_DiasTrabajados= dias  

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = 'E4DF7856-77BE-49B8-BD75-65E5E13BD14C';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('E4DF7856-77BE-49B8-BD75-65E5E13BD14C','GT_MontoVacaciones','Determina el monto a pagar al empleado por los días que está de vacaciones durante la planilla Mensual','FUNCTION GT_MontoVacaciones()

MontoVac = 0.00
DiasVac = 0
Valor_total = 0.00
dias_total = 0

CODMON = "GTQ"

if Emp_Dias_VacacionesPago.RecordCount > 0 then
	Emp_Dias_VacacionesPago.MoveFirst
end if

If Not (Emp_Dias_VacacionesPago.bof And Emp_Dias_VacacionesPago.EOF) Then 

Do While Not Emp_Dias_VacacionesPago.EOF   

DiasVac = cdbl(Emp_Dias_VacacionesPago.Fields("vca_dias_calendario").Value)
MontoVac = cdbl(Emp_Dias_VacacionesPago.Fields("vca_valor_vacaciones").Value)

dias_total = dias_total + DiasVac
valor_total = valor_total + MontoVac

Emp_Dias_VacacionesPago.movenext

Loop
writelog " Vacaciones: " & cstr(Valor_total)
END IF

If Not IsNull(Factores("GT_MontoVacaciones").CodTipoIngreso) And Valor_total > 0 Then
      agrega_ingresos_historial Agrupadores, _
                                IngresosEstaPlanilla, _
                                Emp_InfoSalario.Fields("EMP_CODIGO").Value, _
                                Pla_Periodo.Fields("PPL_CODIGO").Value, _
                                Factores("GT_MontoVacaciones").CodTipoIngreso, _
                                Valor_Total, CODMON, dias_total, "Dias"

End If

GT_MontoVacaciones= Valor_Total

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = 'CB917C21-2EC7-47F6-BEC6-5E67B242087A';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('CB917C21-2EC7-47F6-BEC6-5E67B242087A','GT_DescBoletoOrnato','Determina el Monto a Descontar al empleado por concepto de Boleto de Ornato Mensual','FUNCTION GT_DescBoletoOrnato()

Dim Bolor  
Dim MontoSalario  
Dim Liquido       

Bolor = 0.00
MontoSalario = 0.00    
salarios = 0.00
bonificacion = 0.00    

if Pla_Periodo.Fields("PPL_FRECUENCIA").Value = 2 And _
   Pla_Periodo.Fields("PPL_MES").Value = GeneralesPorEmpresa.Fields("pge_mes_descontar_boleto").Value And _
   Emp_InfoSalario.Fields("dpl_descuenta_ornato").Value = "S" Then 
   
   If not (RubroSalario.Bof and RubroSalario.Eof) then
      if isnull( RubroSalario.Fields("esa_valor").Value ) then
         salarios = 0.00
      else       
	       salarios = RubroSalario.Fields("esa_valor").Value
      end if
   end if

   if not (RubroBoniLey.Bof and RubroBoniLey.Eof) then
      if isnull( RubroBoniLey.Fields("esa_valor").Value ) then
         bonificacion = 0.00
      else       
         bonificacion = RubroBoniLey.Fields("esa_valor").Value 
      end if
   end if

   Liquido = Factores("GT_SalarioBruto").Value 

   Montosalario = salarios + Bonificacion

   If Not (BoletoOrnato.bof And BoletoOrnato.EOF) Then
      BoletoOrnato.MoveFirst                 
      
      Do While Not BoletoOrnato.EOF
         If MontoSalario >= CCur(BoletoOrnato.Fields("bor_monto_inicial").Value) And _
            MontoSalario <= CCur(BoletoOrnato.Fields("bor_monto_final").Value) Then
            Bolor = Round(BoletoOrnato.Fields("bor_monto_descuento").Value, 2)
			 Exit Do
         End If
         BoletoOrnato.movenext
      Loop
   Else
        writelog "No Existe Tabla para el Calculo del Boleto de Ornato Definida para esta Empresa"
        Exit Function
   End If

   If (Liquido - Bolor) < 0 Then
      Bolor = 0
   End If       

   If Not IsNull(Factores("GT_DescBoletoOrnato").CodTipoDescuento) And Bolor > 0 Then
	   agrega_descuentos_historial Agrupadores, _
								DescuentosEstaPlanilla, _
								Emp_InfoSalario.Fields("EMP_CODIGO").Value, _
								Pla_Periodo.Fields("PPL_CODIGO").Value, _
								Factores("GT_DescBoletoOrnato").CodTipoDescuento, _
								ROUND(bolor, 2), 0, 0, Pla_Periodo.Fields("tpl_codmon").Value, 0, "Dias"
   End If

End if

GT_DescBoletoOrnato= Round(Bolor, 2)

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = '5938B934-34DA-4A2C-BD98-88C56B09FA8C';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('5938B934-34DA-4A2C-BD98-88C56B09FA8C','GT_Ingresos_Ciclicos','Pagos Fijos realizados al empleado mensualmente Mensual','FUNCTION GT_Ingresos_Ciclicos()
	
	Dim ValorIngreso
	Dim Dias
	
	ValorIngreso = 0.00
	Dias = 0
	
	Dias = Factores("GT_DiasTrabajados").Value

	''''Debemos garantizarnos que el cursor tiene por lo menos un registro para este empleado
	If Not (IngresosCiclicos.Bof And IngresosCiclicos.Eof)Then
		IngresosCiclicos.MoveFirst
		
		Do Until IngresosCiclicos.EOF
			
			ValorIngreso = ValorIngreso + IngresosCiclicos.Fields("cic_valor_cuota").Value
			
			If ValorIngreso > 0 Then
				agrega_ingresos_historial Agrupadores, _
											IngresosEstaPlanilla, _
											Emp_InfoSalario.Fields("EMP_CODIGO").Value, _
											Pla_Periodo.Fields("PPL_CODIGO").Value, _
											IngresosCiclicos.Fields("igc_codtig").Value, _
											round(IngresosCiclicos.Fields("cic_valor_cuota").Value, 0), _
											IngresosCiclicos.Fields("igc_codmon").Value, Dias, "Dias"
			End If

			IngresosCiclicos.MoveNext
		Loop

	End If
	
	GT_Ingresos_Ciclicos= Round(ValorIngreso, 0)
	
END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = '0B0F5BE5-83ED-4CF4-9D77-B95E85466295';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('0B0F5BE5-83ED-4CF4-9D77-B95E85466295','GT_BonoPactadoActual','Calcula el valor de la Bonificacion Pactada Actual Mensual','FUNCTION GT_BonoPactadoActual()

boni = 0.00
   
'' - CALCULA LA BONIFICACION ACTUAL
if not (RubroBoniPactada.Bof and RubroBoniPactada.Eof) then
if isnull( RubroBoniPactada.Fields("esa_valor").Value ) then
	boni = 0.00
else
	boni = RubroBoniPactada.Fields("esa_valor").Value
end if
end if
   
GT_BonoPactadoActual= boni

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = 'C032648D-F89E-4361-9722-AC9748783521';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('C032648D-F89E-4361-9722-AC9748783521','GT_SeguroSocial','Determina el Monto a Descontar por concepto de IGSS al empleado en el periodo Mensual','FUNCTION GT_SeguroSocial()

afecto = 0.00
cuota = 0.00
patronal = 0.00
por_cuota = 0.0000
pat_cuota = 0.0000

If Pla_Periodo.Fields("PPL_FRECUENCIA").Value = 2 then
   If Emp_InfoSalario.Fields("dpl_seguro_social").Value Then
      If not (ParametrosCuotaIGSS.bof and ParametrosCuotaIGSS.eof) then
         If IsNull(ParametrosCuotaIGSS.Fields("ubi_porcentaje_cuota_isss").Value) Then
            por_cuota = 0
         Else
			 por_cuota = ParametrosCuotaIGSS.Fields("ubi_porcentaje_cuota_isss").Value
		  End If
	  End if
  
      afecto = Agrupadores("BaseCalculoIGSS").Value

      '' Cuota Empleado
      
      cuota = por_cuota / 100.00 * afecto
	
      If cuota < 0 Then 
         cuota = 0       
      End if

      '' Cuota Patronal
      
      pat_cuota = Factores("GT_SeguroSocialPatrono").Value                                     
    
      patronal = Round(pat_cuota / 100.00 * afecto,2)

      If patronal < 0 Then  
         patronal = 0  
      End If                                   

      '' Inserta el registro en la tabla de descuentos  
      If Not IsNull(Factores("GT_SeguroSocial").CodTipoDescuento) And cuota > 0 Then       
         agrega_descuentos_historial Agrupadores, _
									DescuentosEstaPlanilla, _
									Emp_InfoSalario.Fields("EMP_CODIGO").Value, _
									Pla_Periodo.Fields("PPL_CODIGO").Value, _
									Factores("GT_SeguroSocial").CodTipoDescuento, _
									ROUND(cuota, 2), ROUND(patronal,2), Afecto, Pla_Periodo.Fields("tpl_codmon").Value, _
									Factores("GT_DiasTrabajados").Value, "Dias"
      End If
   End if


   Factores("GT_SeguroSocialPatrono").Value = patronal  
   
End if

GT_SeguroSocial= Round(cuota, 2)

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = 'FE1BE314-0831-43A0-B557-2D003F980C35';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('FE1BE314-0831-43A0-B557-2D003F980C35','GT_SeguroSocialPatrono','Determina el Monto que deberá pagar el Patrono por Concepto de IGSS del Empleado en el periodo Mensual','FUNCTION GT_SeguroSocialPatrono()

socialpa = 0  
irtra = 0  
intecap = 0     

If Pla_Periodo.Fields("PPL_FRECUENCIA").Value = 2 then
   If Not (ParametrosCuotaIGSS.bof And ParametrosCuotaIGSS.EOF) Then       
	  If IsNull(ParametrosCuotaIGSS.Fields("ubi_pag_porcent_igss_patrono").Value) Then           
	 	  socialpa = 0       
	  Else            
		  socialpa = ParametrosCuotaIGSS.Fields("ubi_pag_porcent_igss_patrono").Value       
	  End If         

      If IsNull(ParametrosCuotaIGSS.Fields("ubi_irtra").Value) Then            
		  irtra = 0       
      Else            
		   irtra = ParametrosCuotaIGSS.Fields("ubi_irtra").Value       
      End If        

      If IsNull(ParametrosCuotaIGSS.Fields("ubi_intecap").Value) Then            
         intecap = 0       
      Else            
         intecap = ParametrosCuotaIGSS.Fields("ubi_intecap").Value       
      End If  
   End If            
End If

GT_SeguroSocialPatrono= Round(socialpa, 2)

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = '4D268117-9C6B-46BC-9146-60CCFD686DE3';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('4D268117-9C6B-46BC-9146-60CCFD686DE3','GT_SeguroMedico','Determina el monto de Descuento por el Seguro Medico. Mensual','FUNCTION GT_SeguroMedico()

Seguro = 0.00
CuotaPat = 0.00
CuotaLab = 0.00

if Pla_Periodo.Fields("PPL_FRECUENCIA").Value = 2 then

	if not (SeguroPorEmpleado.Bof and SeguroPorEmpleado.eof) then
		CuotaPat = SeguroPorEmpleado.Fields("sem_cuota_pat").Value 
		CuotaLab = SeguroPorEmpleado.Fields("sem_cuota_emp").Value 
	end if
	

	If Not IsNull(Factores("GT_SeguroMedico").CodTipoDescuento) And CuotaLab > 0 Then       

		Seguro = CuotaLab
	
		agrega_descuentos_historial Agrupadores, _
									DescuentosEstaPlanilla, _
									Emp_InfoSalario.Fields("EMP_CODIGO").Value, _
									Pla_Periodo.Fields("PPL_CODIGO").Value, _
									Factores("GT_SeguroMedico").CodTipoDescuento, _
									ROUND(CuotaLab, 2), CuotaPat, 0, Pla_Periodo.Fields("tpl_codmon").Value, 0, "Dias"
	end if 

end if

GT_SeguroMedico= Seguro

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = 'D2091928-4505-43C4-ACA4-022CCFE1E5FB';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('D2091928-4505-43C4-ACA4-022CCFE1E5FB','GT_DiasVacaciones','Determina la cantidad de Dias a pagar al empleado por encontrarse de vacaciones Mensual','FUNCTION GT_DiasVacaciones()

Dvac = 0

if not (Emp_dias_vacaciones.bof and Emp_dias_Vacaciones.eof) then
	do while not Emp_dias_Vacaciones.eof
	
		dvac = dvac + Emp_Dias_Vacaciones.Fields("dias_vacaciones").Value 
		Emp_dias_Vacaciones.movenext
	
	loop

end if

GT_DiasVacaciones= Dvac

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = '1FD70B43-6D35-4AC5-8ADB-4AFC7766C425';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('1FD70B43-6D35-4AC5-8ADB-4AFC7766C425','GT_ComplNuevosBonoPacta','Complemento de Bonificacion pactada a Empleados nuevos en el periodo Anterior y sin pago efectuado Mensual','FUNCTION GT_ComplNuevosBonoPacta()

''----------------------------------------------------------------------------------------------------------
'' Calcula los complementos de empleados que ingresaron en el periodo anterior siempre y cuando el anterior
'' sea el segundo periodo y que no haya tenido pago en ese periodo.
'' Los dias que se toman son de la fecha de ingreso hasta el dia 30 del mes, dado que el salario es en base
'' a 30 dias.
''----------------------------------------------------------------------------------------------------------

vTotal = 0.00
vbonq = 0.00
vdias = 0
codmon = "GTQ"

if Pla_Periodo.Fields("PPL_FRECUENCIA").Value = 2 Then 

   if not (RubroBoniPactada.Bof and RubroBoniPactada.Eof) then
   
	  codmon = RubroBoniPactada.Fields("esa_codmon").Value
   
   end if

   if NOT(Emp_Nuevo_Ingreso.BOF and Emp_Nuevo_Ingreso.EOF) then

      vdias = Emp_Nuevo_Ingreso.Fields("eni_dias_pago").Value 
      vbonq = round(Factores("GT_BonoPactadoMensual").Value,2)

      vTotal = round((vbonq / 30.00) * vdias, 2)

   end if


   If Not IsNull(Factores("GT_ComplNuevosBonoPacta").CodTipoIngreso) And vtotal > 0 Then    
	      agrega_ingresos_historial Agrupadores, _
								IngresosEstaPlanilla, _
								Emp_InfoSalario.Fields("EMP_CODIGO").Value, _
								Pla_Periodo.Fields("PPL_CODIGO").Value, _
								Factores("GT_ComplNuevosBonoPacta").CodTipoIngreso, _
								vtotal, codmon, vdias, "Dias"
     
   end if

end if

GT_ComplNuevosBonoPacta= vTotal

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = 'FAE2287C-FF22-4466-927E-AAE805E36ECA';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('FAE2287C-FF22-4466-927E-AAE805E36ECA','GT_PrestacionesEmpleado','Prestaciones del Empleado Mensual','FUNCTION GT_PrestacionesEmpleado()

PrestaEmpleado = 0

if prestaciones_empleado.RecordCount > 0 then
	prestaciones_empleado.MoveFirst
	do until prestaciones_empleado.EOF

		if (cint(Pla_Periodo.Fields("PPL_FRECUENCIA").Value) = prestaciones_empleado.fields("pre_frecuencia").value) or (prestaciones_empleado.fields("pre_frecuencia").value = 6) then

			agrega_ingresos_historial Agrupadores, _ 
						IngresosEstaPlanilla, _
						Emp_InfoSalario.Fields("EMP_CODIGO").Value, _
						Pla_Periodo.Fields("PPL_CODIGO").Value, _
						prestaciones_empleado.Fields("pre_codingreso").Value , _
						round(prestaciones_empleado.Fields("ppe_VALOR").Value, 2), _
						prestaciones_empleado.Fields("ppp_codmon").Value, 0, "Dias"

			PrestaEmpleado = PrestaEmpleado + round(prestaciones_empleado.Fields("ppe_VALOR").Value, 2)
		end if

		prestaciones_empleado.MoveNext
	loop
end if

GT_PrestacionesEmpleado= PrestaEmpleado

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = 'EE32616B-288B-4D37-A1BC-9F3BB4A28C33';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('EE32616B-288B-4D37-A1BC-9F3BB4A28C33','GT_Salario','Salario Correspondiente a esta quincena Mensual','FUNCTION GT_Salario()

Dim sal
Dim DiasDelMes
Dim Dias  

sal = 0  
DiasDelMes = 0
Dias = 0

if Pla_Periodo.Fields("PPL_FRECUENCIA").Value = 2 then

	DiasDelMes = Factores("GT_DiasDelMes").Value 

	if DiasDelMes > 0 then     
		sal = Factores("GT_Sueldomensual").Value 
		dias = Factores("GT_DiasTrabajados").Value                         

		If sal > 0 Then       
			sal = sal / DiasDelMes * dias  
		End If 
		
	End If                   


	If Not IsNull(Factores("GT_Salario").CodTipoIngreso) And sal > 0 Then    
		agrega_ingresos_historial Agrupadores, _
									IngresosEstaPlanilla, _
									Emp_InfoSalario.Fields("EMP_CODIGO").Value, _
									Pla_Periodo.Fields("PPL_CODIGO").Value, _
									Factores("GT_Salario").CodTipoIngreso, _
									sal, RubroSalario.Fields("esa_codmon").Value, dias, "Dias"
	end if

End If

GT_Salario= sal

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = '4D6352C0-4CDF-4D5C-8035-7BE6B279F6B3';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('4D6352C0-4CDF-4D5C-8035-7BE6B279F6B3','GT_DescuentoISR','Determina el Monto a Descontar al Empleado por concepto de ISR Mensual','FUNCTION GT_DescuentoISR()
Renta_Bruta = 0.00
Ingresos_Excentos = 0.00
Renta_Neta = 0.00
Deducibles = 0.00
Renta_Imponible = 0.00
Impuesto_Anual = 0.00
Periodos_Proyectar = 0.00
Retenido = 0.00
Renta_Mensual = 0.00


If Not (EMP_ISR_CALCULADO.bof And EMP_ISR_CALCULADO.EOF) Then  

Liquido = Factores("GT_SalarioBruto").Value - _
	      Factores("GT_SeguroSocial").Value - _
	      Factores("GT_DescBoletoOrnato").Value 

If GeneralesPorEmpresa.Fields("pge_quincena_descontar_isr").Value = Pla_Periodo.Fields("PPL_FRECUENCIA").Value then

	If Not (Emp_ISR_Calculado.bof And Emp_ISR_Calculado.EOF) AND Emp_InfoSalario.Fields("dpl_renta").Value Then
	
       Renta_Bruta = CCur(EMP_ISR_CALCULADO.Fields("ICI_RENTA_BRUTA").Value)

		Ingresos_Excentos = CCur(EMP_ISR_CALCULADO.Fields("ICI_INGRESOS_EXCENTOS").Value)

		Periodos_Proyectar = CCur(EMP_ISR_CALCULADO.Fields("ICI_PERIODOS_PROYECTAR").Value)
		
		Deducibles = CCur(EMP_ISR_CALCULADO.Fields("ICI_DEDUCIBLES").Value) 
					
		Retenido = CCur(EMP_ISR_CALCULADO.Fields("ICI_ISR_RETENIDO").Value )
			
		Renta_Bruta = Renta_Bruta + _
			          Agrupadores("GT_ISR13Ordinario").Value + _
			          Agrupadores("GT_ISR13BoniLey").Value + _
			          Agrupadores("GT_ISR13BoniPactada").Value + _
			          Agrupadores("GT_ISR13OtrosProyNI").Value  + _
			          Agrupadores("GT_ISR13OtrosProySI").Value  + _
			          Agrupadores("GT_ISR13OtrosNoProy").Value
			 
		Renta_Neta = Renta_Bruta - Ingresos_Excentos
					
		Renta_Imponible = Renta_Neta - Deducibles - Agrupadores("GT_ISR13SSDesc").Value
		
		Fecha_Ingreso = Emp_InfoSalario.Fields("EMP_FECHA_INGRESO").Value

		if Fecha_Ingreso > Emp_ISR_Calculado.Fields("iaf_fecha_ini").Value and Fecha_Ingreso < Emp_ISR_Calculado.Fields("iaf_fecha_fin").Value then
		   Renta_Imponible = ( Renta_Imponible / DateDiff("d", Fecha_Ingreso,Emp_ISR_Calculado.Fields("iaf_fecha_fin").Value) + 1 ) * 365
		End if

	    if not (isr_isr.bof and isr_isr.eof) then
		   isr_isr.movefirst
		   
		   do until isr_isr.eof
			   if Renta_Imponible >= ISR_ISR.Fields("ISR_DESDE").Value and Renta_Imponible <= ISR_ISR.Fields("ISR_HASTA").Value Then

				   Impuesto_Anual = ((Renta_Imponible - ISR_ISR.Fields("ISR_EXCEDENTE").Value) * ISR_ISR.Fields("ISR_PCT").Value / 100.00) + ISR_ISR.Fields("ISR_VALOR").Value 

				   exit do
			   end if

			   isr_isr.movenext
		   loop
	    end if

		if Fecha_Ingreso > Emp_ISR_Calculado.Fields("iaf_fecha_ini").Value and Fecha_Ingreso < Emp_ISR_Calculado.Fields("iaf_fecha_fin").Value then
		   Impuesto_Anual = (Impuesto_Anual / 365 ) * (DateDiff("d", Fecha_Ingreso,Emp_ISR_Calculado.Fields("iaf_fecha_fin").Value) + 1 ) 
		End if

   Impuesto_Anual = ROUND(Impuesto_Anual,2)
   
	Renta_Mensual = Impuesto_Anual - Retenido

	if Periodos_Proyectar > 0 Then
		Renta_Mensual = Renta_Mensual / (Periodos_Proyectar + 1)
	end if		
		
		If Renta_Mensual > 0 Then
			If (Liquido - Renta_Mensual) <= 0 Then
				Renta_Mensual = 0
			End If
	    End If
	Else
	Renta_Mensual = 0
	End If
    ''writelog vbCrlf
	''writelog "	Descuenta ISR al empleado " & Emp_InfoSalario.Fields("EMP_CODIGO").Value
	''writelog " Renta Bruta " & Renta_Bruta
	''writelog " Ingresos excentos " & Ingresos_Excentos
	''writelog " Renta_Imponible " & Renta_Imponible
	''writelog " Impuesto Anual " & Impuesto_Anual
	''writelog " Retenido " &  Retenido
	''writelog " Monto a Descontar " & Renta_Mensual
ELSE

  Renta_mensual = Emp_ISR_Calculado.Fields("ICI_RETENCION_MENSUAL").Value

END IF

	Renta_Mensual = ROUND(Renta_Mensual,2)

	
	If Not IsNull(Factores("GT_DescuentoISR").CodTipoDescuento) And Renta_Mensual > 0 Then
		''writelog "Descuenta ISR al empleado " & Emp_InfoSalario.Fields("EMP_CODIGO").Value
		''writelog "Monto a Descontar " & Emp_DescuentoISR.Fields("DJP_RETENCION_MENSUAL").Value
	
		agrega_descuentos_historial Agrupadores, _
									DescuentosEstaPlanilla, _
									Emp_InfoSalario.Fields("EMP_CODIGO").Value, _
									Pla_Periodo.Fields("PPL_CODIGO").Value, _
									Factores("GT_DescuentoISR").CodTipoDescuento, _
									Round(Renta_Mensual, 2), 0, 0, Pla_Periodo.Fields("tpl_codmon").Value, 0, "Dias"
	End If

End If

If Renta_Mensual > 0 Then
	GT_DescuentoISR= Round(Renta_Mensual, 2)
Else
	GT_DescuentoISR= 0
End If

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = '3BD0298B-4CD9-47FB-A492-E1A626A61E28';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('3BD0298B-4CD9-47FB-A492-E1A626A61E28','GT_CiclicosPorcentaje','Determina el Monto a Descontar al empleado por Prestamos Mensual','FUNCTION GT_CiclicosPorcentaje()

Liquido = 0.00

Liquido = round(Factores("GT_SalarioBruto").Value - _
	            Factores("GT_SeguroSocial").Value - _
	            Factores("GT_DescBoletoOrnato").Value - _
	            Factores("GT_SeguroMedico").Value - _
	            Factores("GT_OtrosDescuentos").Value - _ 
	            Factores("GT_ValorDescCiclicos").Value, 2) - _
                Factores("GT_DescuentoISR").Value
  
dc = 0
vc = 0
patrono = 0
aplicada = False

Do Until CuotasCiclicosPorcentaje.EOF

	if CuotasCiclicosPorcentaje.Fields("PRE_porcentaje").Value > 0 then

		for i = 1 to Agrupadores.Count
			if Agrupadores(i).Codigo = CuotasCiclicosPorcentaje.Fields("PRE_CODTAG").Value then

				vc = round(Agrupadores(i).Value * CuotasCiclicosPorcentaje.Fields("PRE_PORCENTAJE").Value / 100.00, 2)

				exit for
			end if
		next

		If (ccur(liquido) - ccur(vc)) >= 0 Then
			liquido = ccur(liquido) - ccur(vc)
			dc = dc + vc

			agrega_descuentos_historial Agrupadores, _
											DescuentosEstaPlanilla, _
											Emp_InfoSalario.Fields("EMP_CODIGO").Value, _
											Pla_Periodo.Fields("PPL_CODIGO").Value, _
					 						CuotasCiclicosPorcentaje.Fields("TPR_CODTDC").Value , _
											vc, 0.00, 0.00, CuotasCiclicosPorcentaje.Fields("DCC_CODMON").Value, 0, "Dias"
		End If

	end if
   
	CuotasCiclicosPorcentaje.MoveNext
Loop

GT_CiclicosPorcentaje= dc

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = '988B4F9E-C51E-4BB1-94F8-FCE413C8B582';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('988B4F9E-C51E-4BB1-94F8-FCE413C8B582','GT_RetroBoniLey','Determina el monto a pagar al empleado por Retroactivo por Incremento de Bono Ley Mensual','FUNCTION GT_RetroBoniLey()

Retroactivo = 0.00
dias = 0


               
	If Not (Emp_Incremento_BoniLey_Retro.bof And Emp_Incremento_BoniLey_Retro.EOF) Then
                    
		Do While Not Emp_Incremento_BoniLey_Retro.EOF
                                             
			dias = Emp_Incremento_BoniLey_Retro.Fields("PIR_DIAS_RETROACTIVO").Value
            
			Retroactivo = Retroactivo + Emp_Incremento_BoniLey_Retro.Fields("PIR_MONTO_RETROACTIVO").Value

			Emp_Incremento_BoniLey_Retro.movenext
		Loop
	End If
       
     
	If Not IsNull(Factores("GT_RetroBoniLey").CodTipoIngreso) And Retroactivo > 0 Then
		agrega_ingresos_historial Agrupadores, _
								IngresosEstaPlanilla, _
								Emp_InfoSalario.Fields("EMP_CODIGO").Value, _
								Pla_Periodo.Fields("PPL_CODIGO").Value, _
								Factores("GT_RetroBoniLey").CodTipoIngreso, _
								Retroactivo, RubroBoniLey.Fields("esa_codmon").Value, dias, "Dias"
	End If
      

             
GT_RetroBoniLey= Retroactivo

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = '6682FB47-7243-45E7-9C35-23F4F5CCFF53';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('6682FB47-7243-45E7-9C35-23F4F5CCFF53','GT_DiasAmonestacion','Dias Amonestacion para este periodo Mensual','FUNCTION GT_DiasAmonestacion()

Amo = 0         

If Emp_Amonestacion.RecordCount > 0 Then              
	Emp_Amonestacion.MoveFirst         

	Do Until Emp_Amonestacion.EOF            

		Amo = Amo + Emp_Amonestacion.Fields("DIAS").Value 
      
		Emp_Amonestacion.movenext       
	Loop  

End If   
          
GT_DiasAmonestacion= Amo

END FUNCTION ','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = 'A17F3A43-305C-4CDB-AA15-A1790D6B483D';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('A17F3A43-305C-4CDB-AA15-A1790D6B483D','GT_DiasIncapacidad','Determina la Cantidad de Dias a Descontar producto de una Accion de Incapacidad (suspension del IGSS Mensual','FUNCTION GT_DiasIncapacidad()

vdias = 0

If Not (Emp_DiasIncapacidadPago.bof And Emp_DiasIncapacidadPago.EOF) Then 

	Do While Not Emp_DiasIncapacidadPago.EOF                                    

		VDIAS = VDIAS + cdbl(Emp_DiasIncapacidadPago.Fields("PIE_DIAS").Value)

		Emp_DiasIncapacidadPago.movenext       

	Loop         

End If               

GT_DiasIncapacidad= VDIAS

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = 'A8FCD9E4-04EF-4DFD-B0E5-B9BB26C32BB7';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('A8FCD9E4-04EF-4DFD-B0E5-B9BB26C32BB7','GT_OtrosDescuentos','Determina el Monto a Descontar por Otros Descuentos al Empelado Mensual','FUNCTION GT_OtrosDescuentos()

OtrosDesc = 0.00  
Liquido = 0.00

Liquido = Factores("GT_SalarioBruto").Value - _            
          Factores("GT_SeguroSocial").Value - _            
          Factores("GT_DescBoletoOrnato").Value	 - _            
          Factores("GT_DescuentoISR").Value - _
          Factores("GT_SeguroMedico").Value            

sum = 0
valor = 0 

if Emp_OtrosDescuentos.RecordCount > 0 then
	Emp_OtrosDescuentos.MoveFirst
	do until Emp_OtrosDescuentos.EOF
		valor = round(Emp_OtrosDescuentos.Fields("ods_valor_a_descontar").Value, 2)
   
		if valor > liquido then
			Emp_OtrosDescuentos.Fields("ods_aplicado_planilla").Value = 0
		else
			liquido = liquido - valor
			sum = sum + valor
			Emp_OtrosDescuentos.Fields("ods_aplicado_planilla").Value = 1
			agrega_descuentos_historial Agrupadores, _
											DescuentosEstaPlanilla, _
											Emp_InfoSalario.Fields("EMP_CODIGO").Value, _
											Pla_Periodo.Fields("PPL_CODIGO").Value, _
											Emp_OtrosDescuentos.Fields("ODS_CODTDC").Value, _
											valor, 0, 0, Emp_OtrosDescuentos.Fields("ods_codmon").Value, 0, "Dias"
		end if
   
		Emp_OtrosDescuentos.MoveNext
	loop
end if
 
GT_OtrosDescuentos= sum

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = 'BC0D5EE6-3D2E-43D8-B8C7-17152031CCC6';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('BC0D5EE6-3D2E-43D8-B8C7-17152031CCC6','GT_RetroBoniPactada','Determina el Monto por Retroactivo a pagar al empleado por Bonificacion Pactada Mensual','FUNCTION GT_RetroBoniPactada()

Retroactivo = 0.00
dias = 0



	If Not (Emp_IncrementoBoniPactadaRetro.bof And Emp_IncrementoBoniPactadaRetro.EOF) Then
                   
		Do While Not Emp_IncrementoBoniPactadaRetro.EOF
                                             
			dias = Emp_IncrementoBoniPactadaRetro.Fields("PIR_DIAS_RETROACTIVO").Value 
            
			Retroactivo = Retroactivo + Emp_IncrementoBoniPactadaRetro.Fields("PIR_MONTO_RETROACTIVO").Value 

			Emp_IncrementoBoniPactadaRetro.movenext
		Loop
	End If
       
     
	If Not IsNull(Factores("GT_RetroBoniPactada").CodTipoIngreso) And Retroactivo > 0 Then
		agrega_ingresos_historial Agrupadores, _
								IngresosEstaPlanilla, _
								Emp_InfoSalario.Fields("EMP_CODIGO").Value, _
								Pla_Periodo.Fields("PPL_CODIGO").Value, _
								Factores("GT_RetroBoniPactada").CodTipoIngreso, _
								Retroactivo, RubroBoniPactada.Fields("esa_codmon").Value, dias, "Dias"
	End If

        

GT_RetroBoniPactada= Retroactivo

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = '892C71C1-98ED-45A2-B0B9-9FBCA7F0974C';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('892C71C1-98ED-45A2-B0B9-9FBCA7F0974C','GT_SalarioNeto','Determina el Liquido a Percibir por el Empleado en el Periodo Mensual','FUNCTION GT_SalarioNeto()

Dim Neto       
Neto = 0       

Neto = Factores("GT_SalarioBruto").Value - _
       Factores("GT_SeguroSocial").Value - _
       Factores("GT_DescBoletoOrnato").Value - _
       Factores("GT_SeguroMedico").Value - _
       Factores("GT_OtrosDescuentos").Value - _
       Factores("GT_ValorDescCiclicos").Value - _
       Factores("GT_CiclicosPorcentaje").Value - _
       Factores("GT_DescuentoISR").Value 

GT_SalarioNeto = round(Neto, 2)

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = '10521867-ECDF-4116-92CB-D7A2C8958A0E';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('10521867-ECDF-4116-92CB-D7A2C8958A0E','GT_ComplNuevosSalario','Complemento de Salario a Empleados nuevos en el periodo Anterior y que no tienen pago efectuado Mensual','FUNCTION GT_ComplNuevosSalario()

'' Calcula los complementos de empleados que ingresaron en el periodo anterior siempre y cuando el anterior
'' sea el segundo periodo y que no haya tenido pago en ese periodo.
'' Los dias que se toman son de la fecha de ingreso hasta el dia 30 del mes, dado que el salario es en base
'' a 30 dias.

vTotal = 0.00
vsalm = 0.00
vdias = 0.00
codmon = "GTQ"

if Pla_Periodo.Fields("PPL_FRECUENCIA").Value = 2 Then 

   if not (RubroSalario.Bof and RubroSalario.Eof) then
      codmon = RubroSalario.Fields("esa_codmon").Value
   end if

   if not(Emp_Nuevo_Ingreso.BOF and Emp_Nuevo_Ingreso.EOF) then
      
      vdias = Emp_Nuevo_Ingreso.Fields("eni_dias_pago").Value  
      vsalm = Factores("GT_SalarioActual").Value

      vTotal = round((vsalm / 30.00) * vdias, 2)

   end if

   If Not IsNull(Factores("GT_ComplNuevosSalario").CodTipoIngreso) And vtotal > 0 Then
	  agrega_ingresos_historial Agrupadores, _
								IngresosEstaPlanilla, _
								Emp_InfoSalario.Fields("EMP_CODIGO").Value, _
								Pla_Periodo.Fields("PPL_CODIGO").Value, _
								Factores("GT_ComplNuevosSalario").CodTipoIngreso, _
								vtotal, codmon, vdias, "Dias"
   end if

end if

GT_ComplNuevosSalario= vTotal

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = '2736ADB0-E80A-4994-A54C-9367C04CAA59';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('2736ADB0-E80A-4994-A54C-9367C04CAA59','GT_BonoPactado','Valor de la Bonificacion Pactada Correspondiente al Periodo Mensual','FUNCTION GT_BonoPactado()

Dim bon
Dim DiasDelMes
Dim Dias  

bon = 0  
DiasDelMes = 0
Dias = 0

if Pla_Periodo.Fields("PPL_FRECUENCIA").Value = 2 Then 

	DiasDelMes = Factores("GT_DiasDelMes").Value 

	if DiasDelMes > 0 then     
		bon = Factores("GT_BonoPactadomensual").Value 
		
		dias = Factores("GT_DiasTrabajados").Value + _
			   Factores("GT_DiasIncapacidad").Value                    

		If bon > 0 Then       
			bon = bon / DiasDelMes * dias  
		End If 
	End If                   

	If Not IsNull(Factores("GT_BonoPactado").CodTipoIngreso) And bon > 0 Then    
		agrega_ingresos_historial Agrupadores, _
									IngresosEstaPlanilla, _
									Emp_InfoSalario.Fields("EMP_CODIGO").Value, _
									Pla_Periodo.Fields("PPL_CODIGO").Value, _
									Factores("GT_BonoPactado").CodTipoIngreso, _
									bon, RubroBoniPactada.Fields("esa_codmon").Value, dias, "Dias"
	end if

End If

GT_BonoPactado= bon 

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = 'C65A9D17-52B6-4764-9912-E48C24C9A60C';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('C65A9D17-52B6-4764-9912-E48C24C9A60C','GT_BonoPactadoMensual','Bono Pactado Mensual ajustado por si hubo incrementos o si el ingreso fue en el mes Mensual','FUNCTION GT_BonoPactadoMensual()

dim bonomensual
dim bonoanterior
dim fini

bonomensual = 0
bonoanterior = 0

DiasAnterior = 0
DiasActual = 0
   
'' --- BONIFICACION PACTADA DEL MES ACTUAL
bonomensual = round(Factores("GT_BonoPactadoActual").Value,2)
   
'' --- AJUSTA INGRESO POR CONTRATACION DENTRO DEL PERIODO
if Emp_InfoSalario.Fields("EMP_FECHA_INGRESO").Value > Pla_Periodo.Fields("PPL_FECHA_INI").Value then
	bonomensual = round(bonomensual / 30 * (30 - Day(Emp_InfoSalario.Fields("EMP_FECHA_INGRESO").Value) + 1), 2)
	fini = Emp_InfoSalario.Fields("EMP_FECHA_INGRESO").Value
else
	fini = Pla_Periodo.Fields("PPL_FECHA_INI").Value
end if
      
'' --- CALCULA EL BONO PACTADO ANTERIOR CONSIDERANDO QUE HUBO INCREMENTOS
if not (RubroBoniPactada.Bof and RubroBoniPactada.Eof) then
if isnull( RubroBoniPactada.Fields("esa_valor_anterior").Value ) or RubroBoniPactada.Fields("esa_valor_anterior").Value = 0.00 then
	bonoanterior = bonmensual
else
	if isnull(RubroBoniPactada.Fields("esa_exp_valor").Value) then
		bonoanterior = RubroBoniPactada.Fields("esa_valor_anterior").Value 
	else
		if RubroBoniPactada.Fields("esa_exp_valor").Value = "Diario" then
			bonoanterior = RubroBoniPactada.Fields("esa_valor_anterior").Value * 30
		else
			bonoanterior = RubroBoniPactada.Fields("esa_valor_anterior").Value 
		end if
	end if
end if
   
   
'' --- CALCULA EL BONO PACTADO CONSIDERANDO QUE HUBO INCREMENTOS
if not isnull( RubroBoniPactada.Fields("esa_valor_anterior").Value ) then
	if RubroBoniPactada.Fields("esa_fecha_vigencia").Value > fini and _
		RubroBoniPactada.Fields("esa_fecha_vigencia").Value <= Pla_Periodo.Fields("PPL_FECHA_FIN").Value then

		if (day(RubroBoniPactada.Fields("esa_valor_anterior").Value) > 30) OR (MONTH(RubroBoniPactada.Fields("esa_fecha_vigencia").Value) = 2 AND day(RubroBoniPactada.Fields("esa_fecha_vigencia").Value) >= 28) THEN			
			DiasAnterior = 30 - DAY(FINI)
		ELSE
			DIASANTERIOR = DATEDIFF("d", fini, RubroBoniPactada.Fields("esa_fecha_vigencia").Value) 
		end if

		DiasActual = 30 - DAY(RubroBoniPactada.Fields("esa_valor_anterior").Value) + 1

		bonomensual = round((bonoanterior / 30) * DiasAnterior, 2) + _
				round((bonomensual / 30) * DiasActual, 2)   

	end if
end if   

end if 
'' --- Valor de Retorno de la Función
GT_BonoPactadoMensual= bonomensual

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = '2C3D0726-3D4F-430C-8DF8-65BB6D1E3383';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('2C3D0726-3D4F-430C-8DF8-65BB6D1E3383','GT_BonoLeyActual','Obtiene el valor de la bonificacion de Ley actual Mensual','FUNCTION GT_BonoLeyActual()
bono = 0.00

'' - CALCULA LA BONIFICACION DE LEY ACTUAL
if not (RubroBoniLey.Bof and RubroBoniLey.Eof) then
if isnull( RubroBoniLey.Fields("esa_valor").Value ) then
	bono = 0.00
else
	bono = RubroBoniLey.Fields("esa_valor").Value
end if
end if
   
GT_BonoLeyActual= bono
END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = 'BA92629E-E0FD-439C-BAA9-74415954B58F';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('BA92629E-E0FD-439C-BAA9-74415954B58F','GT_SueldoMensual','Sueldo Mensual ajustado por si hubo incrementos o si el ingreso fue en el mes Mensual','FUNCTION GT_SueldoMensual()

salmensual = 0.00
salanterior = 0.00 

DiasAnterior = 0
DiasActual = 0

'' --- SALARIO MENSUAL ACTUAL
salmensual = round(Factores("GT_SalarioActual").Value,2)
   writelog " Sueldo Mensual " & cstr(salmensual)
'' --- AJUSTA INGRESO POR CONTRATACION DENTRO DEL PERIODO
if Emp_InfoSalario.Fields("EMP_FECHA_INGRESO").Value > Pla_Periodo.Fields("PPL_FECHA_INI").Value then
	salmensual = round(salmensual / 30.00 * (30.00 - day(Emp_InfoSalario.Fields("EMP_FECHA_INGRESO").Value) + 1), 2)
	fini = Emp_InfoSalario.Fields("EMP_FECHA_INGRESO").Value
else
	fini = Pla_Periodo.Fields("PPL_FECHA_INI").Value
end if
   
   
'' --- CALCULA EL SALARIO ANTERIOR SI TUVO AUMENTOS
if not (RubroSalario.Bof and RubroSalario.Eof) then
if isnull( RubroSalario.Fields("esa_valor_anterior").Value ) OR RubroSalario.Fields("esa_valor_anterior").Value = 0.00 then
	salanterior = salmensual
else
	if isnull(RubroSalario.Fields("esa_exp_valor").Value) then
		salanterior = RubroSalario.Fields("esa_valor_anterior").Value 
	else
		if RubroSalario.Fields("esa_exp_valor").Value = "Hora" then
			salanterior = RubroSalario.Fields("esa_valor_hora").Value * RubroSalario.Fields("esa_num_horas_x_mes").Value
		else
			salanterior = RubroSalario.Fields("esa_valor_anterior").Value
		end if
	end if
end if
   
'' --- CALCULA EL SALARIO CONSIDERANDO QUE HUBO INCREMENTOS
if not isnull( RubroSalario.Fields("esa_valor_anterior").Value ) then
	if RubroSalario.Fields("esa_fecha_vigencia").Value >= fini and _
		RubroSalario.Fields("esa_fecha_vigencia").Value <= Pla_Periodo.Fields("PPL_FECHA_FIN").Value then

		if (day(RubroSalario.Fields("esa_fecha_vigencia").Value) > 30) OR (MONTH(RubroSalario.Fields("esa_fecha_vigencia").Value) = 2 AND day(RubroSalario.Fields("esa_fecha_vigencia").Value) >= 28) THEN			
			DiasAnterior = 30 - DAY(FINI)
		ELSE
			DIASANTERIOR = DATEDIFF("d", fini, RubroSalario.Fields("esa_fecha_vigencia").Value) 
		end if

		DiasActual = 30 - DAY(RubroSalario.Fields("esa_fecha_vigencia").Value) + 1

		salmensual = round((salanterior / 30.00) * diasanterior, 2) + _
				round((salmensual / 30.00) * diasactual, 2)
   

	end if
end if   
end if   
'' --- Valor de Retorno de la Función

GT_SueldoMensual= salmensual

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = '8B1822AA-600A-4BF7-BA79-2C727613F8C5';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('8B1822AA-600A-4BF7-BA79-2C727613F8C5','GT_CompSuspensionIGSS','Complemento por suspension del seguro social Mensual','Function GT_CompSuspensionIGSS()

valor_incap = 0.00
valor_total = 0.00
dias_incap = 0.00
dias_total = 0.00

CODMON = "GTQ"

if Pla_Periodo.Fields("PPL_FRECUENCIA").Value = 2 Then 
   
   if Emp_DiasIncapacidadPago.RecordCount > 0 then
     
      Emp_DiasIncapacidadPago.MoveFirst

      If Not (Emp_DiasIncapacidadPago.bof And Emp_DiasIncapacidadPago.EOF) Then 

         Do While Not Emp_DiasIncapacidadPago.EOF   

            dias_incap = cdbl(Emp_DiasIncapacidadPago.Fields("PIE_DIAS").Value)
            valor_incap = cdbl(Emp_DiasIncapacidadPago.Fields("PIE_PAGO_EN_NOMINA").Value)

            dias_total = dias_total + dias_incap
            valor_total = valor_total + valor_incap

            Emp_DiasIncapacidadPago.movenext

         Loop

         If Not IsNull(Factores("GT_CompSuspensionIGSS").CodTipoIngreso) And Valor_total > 0 Then
            agrega_ingresos_historial Agrupadores, _
                                IngresosEstaPlanilla, _
                                Emp_InfoSalario.Fields("EMP_CODIGO").Value, _
                                Pla_Periodo.Fields("PPL_CODIGO").Value, _
                                Factores("GT_CompSuspensionIGSS").CodTipoIngreso, _
                                Valor_Total, CODMON, dias_total, "Dias"

         End If

      End If

   End If

End If

GT_CompSuspensionIGSS= valor_total

End Function','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = '24B03A26-2304-404D-8AB0-E05B66944507';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('24B03A26-2304-404D-8AB0-E05B66944507','GT_DiasDelMes','Dias del Mes sera 30 o los dias desde la fecha de ingreso en el mes hasta 30 Mensual','FUNCTION GT_DiasDelMes()

dim Dias

Dias = 0.00

if Emp_InfoSalario.Fields("EMP_FECHA_INGRESO").Value > Pla_Periodo.Fields("PPL_FECHA_INI").Value and _
	Emp_InfoSalario.Fields("EMP_FECHA_INGRESO").Value <= Pla_Periodo.Fields("PPL_FECHA_FIN").Value then
	Dias = 30.00 - Day(Emp_InfoSalario.Fields("EMP_FECHA_INGRESO").Value) + 1
else
	Dias = 30.00
end if
   

GT_DiasDelMes= Dias

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = '771272D6-ABE4-46D1-8904-FD92B09C9709';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('771272D6-ABE4-46D1-8904-FD92B09C9709','GT_AnticipoQuincenal','Valor del Anticipo a pagar en la quincena','FUNCTION GT_AnticipoQuincenal()

DiasMes = 0
DiasQuincena = 0
Anticipo = 0.00
SalarioV = 0  
BonoPactadoV = 0
BonoLeyV = 0
dias = 0
Porcentaje = 0

''--- Toma Dias del Mes que contiene 30 o los dias desde la fecha de Ingreso
''--- Porque el Salario, BonoPactado y BonoLey solo corresponden a ese numero de dias
''--- a ese numero le resta 15 que corresponde a la segunda quincena

DiasMes = Factores("GT_DiasDelMes").Value 
DiasQuincena = DiasMes - 15
   writelog "En Anticipo"
if Pla_Periodo.Fields("PPL_FRECUENCIA").Value = 1 and DiasQuincena > 0 then

	if Emp_InfoSalario.Fields("dpl_anticipo_activo").Value then
	   writelog " ENTRO "
	   Porcentaje = Emp_InfoSalario.Fields("dpl_porcentaje_anticipo").Value 
	Else Porcentaje = GeneralesPorEmpresa.Fields("pge_porcentaje_anticipo").Value
	End If
	   writelog " Porcentale" & cstr(Porcentaje)
	salariov     = Factores("GT_SalarioActual").Value * Porcentaje / 100.00
	BonoLeyv     = Factores("GT_BonoLeyActual").Value * Porcentaje / 100.00
	BonoPactadoV = Factores("GT_BonoPactadoActual").Value * Porcentaje / 100.00

	dias = Factores("GT_DiasTrabajados").Value      
	writelog " Salariov: " & cstr(salariov)	
    writelog " BonoLeyv: " & cstr(BonoLeyv)	
    writelog " BonoPactadoV: " & cstr(BonoPactadoV)	
    writelog " Dias:" & cstr(dias)
	If salariov > 0 Then       
	   salariov = salariov / DiasQuincena * dias  
	End If 

	If BonoLeyv > 0 Then       
	   BonoLeyv = BonoLeyv / DiasQuincena * (dias + Factores("GT_DiasIncapacidad").Value)
	End If 
	
	If BonoPactadoV > 0 Then       
	   BonoPactadoV = BonoPactadoV / DiasQuincena * dias
	End If 

	Anticipo = Salariov + BonoLeyv + BonoPactadoV

	If Not IsNull(Factores("GT_AnticipoQuincenal").CodTipoIngreso) And Anticipo > 0 Then    
		agrega_ingresos_historial Agrupadores, _
									IngresosEstaPlanilla, _
									Emp_InfoSalario.Fields("EMP_CODIGO").Value, _
									Pla_Periodo.Fields("PPL_CODIGO").Value, _
									Factores("GT_AnticipoQuincenal").CodTipoIngreso, _
									Anticipo, Pla_Periodo.Fields("tpl_codmon").Value, dias, "Dias"

	end if

End If

GT_AnticipoQuincenal = Anticipo 

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = '9AF92F8E-9E38-439E-AE48-C798574FE27F';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('9AF92F8E-9E38-439E-AE48-C798574FE27F','GT_DescuentoAnticipo','Descuento por anticipo de Salario','FUNCTION GT_DescuentoAnticipo()

DescuentoAnticipo = 0
valor = 0
filtroactual = ""

If Pla_Periodo.Fields("PPL_FRECUENCIA").Value = 2 then
	if NOT(Pla_Periodo_Anterior.BOF and Pla_Periodo_Anterior.EOF) then
		If Not ((IngresosPlanillaAnterior.bof) And (IngresosPlanillaAnterior.EOF)) Then
		
			filtroactual = IngresosPlanillaAnterior.filter          

			IngresosPlanillaAnterior.filter = filtroactual & " and inn_codppl = " & Pla_Periodo_Anterior.Fields("PPL_CODIGO").Value _
												& " and inn_codtig = " & Factores("GT_AnticipoQuincenal").CodTipoIngreso

			Do While Not IngresosPlanillaAnterior.EOF                                    
				valor = valor + IngresosPlanillaAnterior.Fields("inn_valor").Value                        
				IngresosPlanillaAnterior.movenext       
			Loop  

			IngresosPlanillaAnterior.filter = filtroactual           
		end if               
	End if
  
	If Not IsNull( Factores("GT_DescuentoAnticipo").CodTipoDescuento) And valor > 0 Then       

		agrega_descuentos_historial Agrupadores, _
									DescuentosEstaPlanilla, _
									Emp_InfoSalario.Fields("EMP_CODIGO").Value, _
									Pla_Periodo.Fields("PPL_CODIGO").Value, _
									Factores("GT_DescuentoAnticipo").CodTipoDescuento, _
									ROUND(valor, 2), 0, 0, Pla_Periodo.Fields("tpl_codmon").Value, 0, "Dias"

	End If
End if

GT_DescuentoAnticipo  = valor

END FUNCTION','money','gt',0);

/* Script generated by Evolution - FormulaEditor. 20/09/2013 9:42 AM */

delete from sal.fac_factores where fac_codigo = 'a1f666e2-3cb0-4df9-85d4-2d6c40cbdcc6';

insert into sal.fac_factores (fac_codigo,fac_id,fac_descripcion,fac_vbscript,fac_codfld,fac_codpai,fac_size) values ('a1f666e2-3cb0-4df9-85d4-2d6c40cbdcc6','GT_Sustitucion','Monto de la sustitucions o coberturas','Function GT_Sustitucion()
Monto = 0.00
Dias = 0
Valor_total = 0.00
dias_total = 0

CODMON = "GTQ"

if Emp_Sustitucion.RecordCount > 0 then
	Emp_Sustitucion.MoveFirst
end if

If Not (Emp_Sustitucion.bof And Emp_Sustitucion.EOF) Then 

Do While Not Emp_Sustitucion.EOF   

Dias = cdbl(Emp_Sustitucion.Fields("ste_dias").Value)
Monto = cdbl(Emp_Sustitucion.Fields("ste_valor").Value)

dias_total = dias_total + Dias
valor_total = valor_total + Monto

Emp_Sustitucion.movenext

Loop

END IF

If Not IsNull(Factores("GT_Sustitucion").CodTipoIngreso) And Valor_total > 0 Then
      agrega_ingresos_historial Agrupadores, _
                                IngresosEstaPlanilla, _
                                Emp_InfoSalario.Fields("EMP_CODIGO").Value, _
                                Pla_Periodo.Fields("PPL_CODIGO").Value, _
                                Factores("GT_Sustitucion").CodTipoIngreso, _
                                Valor_Total, CODMON, dias_total, "Dias"

End If

GT_Sustitucion = Valor_Total

End Function','money','gt',0);

commit transaction;
